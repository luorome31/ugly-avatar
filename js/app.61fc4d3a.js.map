{"version":3,"file":"js/app.61fc4d3a.js","mappings":"sJACE,QAAiB,E,4ECAZA,MAAM,a,GAEPC,QAAQ,oBACRC,MAAM,6BACNC,MAAM,MACNC,OAAO,MACPC,GAAG,Y,GAGSA,GAAG,mB,EAVrB,W,GAakBA,GAAG,oB,EAbrB,W,UAiBQ,QASS,UATDA,GAAG,SAAO,EAChB,QAME,gBALAA,GAAG,aACHC,cAAc,OACdC,WAAW,IACXC,KAAK,QACLC,OAAO,WAET,QAA8D,qBAA3CC,GAAG,gBAAgBC,IAAI,QAAQC,MAAM,Q,QAE1CP,GAAG,kBAAkBQ,GAAG,KAAKC,GAAG,KAAKC,GAAG,OAAOC,GAAG,M,EA3B1E,W,UAsDM,QAAkC,aAA3B,uBAAmB,K,UAC1B,QAAiE,YAA3D,wDAAoD,K,EAvDhE,S,EAAA,0B,EAAA,c,EAAA,0B,EAAA,c,EAAA,0B,EAAA,c,EAAA,0B,EAAA,0B,EAAA,+B,EAAA,c,EAAA,0B,EAAA,0B,EAAA,+B,GAmMSX,GAAG,S,EAnMZ,mC,GAAA,MA+MSA,GAAG,a,GACDA,GAAG,a,EAhNd,+B,GA6NWA,GAAG,Y,EA7Nd,+B,GAAA,MA2OSA,GAAG,Y,EA3OZ,qB,GAkQSA,GAAG,S,EAlQZ,0B,0CACE,QA8QM,MA9QN,EA8QM,G,WA7QJ,QA0QM,MA1QN,EA0QM,EAnQJ,QA4CO,cA3CL,QAEW,WAFX,EAEW,EADT,QAAsC,YAA3BY,OAAQ,EAAAC,iBAAe,OAX5C,MAaQ,QAEW,WAFX,EAEW,EADT,QAAuC,YAA5BD,OAAQ,EAAAE,kBAAgB,OAd7C,KAiBQ,GAUA,QAyBiB,iBAzBjB,EAyBiB,EAxBf,QAOE,QANAC,OAAO,KACNC,OA9Bb,Q,eA8BoE,aAAW,KAAK,MAAiB,GAAX,KAAK,W,gCAMrF,QAOE,QANCD,OAAQ,EAAAE,eACRD,OAtCb,Q,eAsCoE,aAAW,KAAK,MAAM,KAAK,SAAW,aAAW,S,+BAtCrH,IA4CU,QAOE,QANAD,OAAO,OACNC,OA9Cb,Q,eA8CoE,aAAW,KAAK,MAAM,KAAK,SAAW,aAAW,S,mCAQ/G,EACA,GACA,QAQE,QAPAE,EAAE,OACFC,EAAE,OACFrB,MAAM,OACNC,OAAO,OACNqB,KAAkB,mBAAiB,KAAK,MAAM,KAAK,SAAW,mBAAiB,U,OA7DxF,IAiEM,QAQE,YAPApB,GAAG,cACFY,OAAQ,EAAAS,mBACTD,KAAK,UACLE,OAAO,QACN,eAAY,EAAQ,EAAAC,UACrB,kBAAgB,QAChBC,OAAO,e,OAxEf,IA2EM,QAkBI,KAjBDC,U,cAAkD,SAAM,GAAM,sBAAsB,mB,OAAkD,SAAM,GAAM,kBAAkB,mB,OAQrK,QAQE,YAPAzB,GAAG,gBACFY,OAAQ,EAAAE,iBACTM,KAAK,QACLE,OAAO,QACN,eAAY,EAAQ,EAAAC,UACrB,kBAAgB,QAChBC,OAAO,e,OA3FjB,I,EAAA,IA8FM,QAkBI,KAjBDC,U,eAAmD,SAAM,GAAM,sBAAsB,kB,OAAiD,SAAM,GAAM,kBAAkB,kB,OAQrK,QAQE,YAPAzB,GAAG,eACFY,OAAQ,EAAAC,gBACTO,KAAK,QACLE,OAAO,QACN,eAAY,EAAQ,EAAAC,UACrB,kBAAgB,QAChBC,OAAO,e,OA9GjB,I,EAAA,IAiHM,QAyCI,KAxCDC,U,cAAkD,SAAM,GAAM,sBAAsB,mB,OAAkD,SAAM,GAAM,kBAAkB,mB,OAQrK,QASE,YARAzB,GAAG,aACFY,OAAQ,EAAAc,cACTN,KAAK,OACLE,OAAO,QACN,gBAAY,KAAQK,mBAAqB,EAAM,GAAO,EAAAJ,UACvD,kBAAgB,QAChB,iBAAe,QACfC,OAAO,e,OAlIjB,IAoIQ,QASE,YARAxB,GAAG,aACFY,OAAQ,EAAAgB,cACTR,KAAK,OACLE,OAAO,QACN,gBAAY,KAAQK,mBAAqB,EAAM,GAAO,EAAAJ,UACvD,kBAAgB,QAChB,iBAAe,QACfC,OAAO,e,OA5IjB,K,WA8IQ,QAWE,WAzJV,QA+IsB,IAALK,IADT,QAWE,UATCC,IAAKD,EACLE,EAAmB,EAAhBC,KAAKC,SAAe,EACvBC,GAAI,EAAAC,iBAAmC,EAAhBH,KAAKC,SAAe,IAC3CG,GAAI,EAAAC,iBAAmC,EAAhBL,KAAKC,SAAe,IAC5CX,OAAO,QACPF,KAAK,OACJ,eAAY,EAAwB,GAAhBY,KAAKC,SAC1BT,OAAO,cACP,YAAU,0B,OAxJpB,K,QAAA,IA2JM,QAuCI,KAtCDC,U,eAAmD,SAAM,GAAM,sBAAsB,kB,OAAiD,SAAM,GAAM,kBAAkB,kB,OAQrK,QAQE,YAPAzB,GAAG,YACFY,OAAQ,EAAA0B,aACTlB,KAAK,OACLE,OAAO,QACN,gBAAY,KAAQK,mBAAqB,EAAM,GAAO,EAAAJ,UACvD,kBAAgB,QAChBC,OAAO,e,OA3KjB,IA6KQ,QAQE,YAPAxB,GAAG,YACFY,OAAQ,EAAA2B,aACTnB,KAAK,OACLE,OAAO,QACN,gBAAY,KAAQK,mBAAqB,EAAM,GAAO,EAAAJ,UACvD,kBAAgB,QAChBC,OAAO,e,OApLjB,K,WAsLQ,QAWE,WAjMV,QAuLsB,IAALK,IADT,QAWE,UATCC,IAAKD,EACLE,EAAmB,EAAhBC,KAAKC,SAAe,EACvBC,GAAI,EAAAM,gBAAkC,EAAhBR,KAAKC,SAAe,IAC1CG,GAAI,EAAAK,gBAAkC,EAAhBT,KAAKC,SAAe,IAC3CX,OAAO,QACPF,KAAK,OACJ,eAAY,EAAwB,GAAhBY,KAAKC,SAC1BT,OAAO,cACP,YAAU,yB,OAhMpB,K,QAAA,IAmMM,QAWI,IAXJ,EAWI,G,aAVF,QASE,WA7MV,QAqMkC,EAAAkB,OArMlC,CAqMkBC,EAAMC,M,WADhB,QASE,YAPCd,IAAKc,EACLhC,OAAQ+B,EACTvB,KAAK,OACJE,OAAQ,EAAAuB,UACR,eAAY,GAAwB,IAAhBb,KAAKC,SAC1B,kBAAgB,QAChBT,OAAO,e,OA5MjB,M,QA+M8BQ,KAAKC,SAAW,K,WAAxC,QA2BI,IA3BJ,EA2BI,EA1BF,QAYI,IAZJ,EAYI,G,WAXF,QAUE,WA3NZ,QAkNwB,IAALJ,IADT,QAUE,UARCC,IAAKD,EACLE,EAAmB,EAAhBC,KAAKC,SAAe,EACvBC,GAAI,EAAAY,iBAAmC,EAAhBd,KAAKC,SAAe,EAC3CG,GAAI,EAAAW,iBAAmC,EAAhBf,KAAKC,SAAe,EAC5CX,OAAO,QACPF,KAAK,OACJ,eAAY,EAAwB,GAAhBY,KAAKC,SAC1BT,OAAO,e,OA1NnB,K,QA6NQ,QAYI,IAZJ,EAYI,G,WAXF,QAUE,WAxOZ,QA+NwB,IAALK,IADT,QAUE,UARCC,IAAKD,EACLE,EAAmB,EAAhBC,KAAKC,SAAe,EACvBC,GAAI,EAAAc,gBAAkC,EAAhBhB,KAAKC,SAAe,EAC1CG,GAAI,EAAAa,gBAAkC,EAAhBjB,KAAKC,SAAe,EAC3CX,OAAO,QACPF,KAAK,OACJ,eAAY,EAAwB,GAAhBY,KAAKC,SAC1BT,OAAO,e,OAvOnB,K,uBA2OM,QAsBI,IAtBJ,EAsBI,EArBF,QAoBQ,QAnBL0B,E,KAAqC,kB,IAAkD,kB,MAAoD,mB,IAAmE,IAAhB,mB,KAA0D,kBAAkB,oBAAgB,E,IAAwD,IAAf,kBAcpU9B,KAAK,OACLE,OAAO,QACN,eAAY,IAAwB,EAAhBU,KAAKC,SAC1B,kBAAgB,QAChBT,OAAO,e,OA/PjB,OAkQM,QASI,IATJ,EASI,EARF,QAOE,YANCZ,OAAQ,EAAAuC,YACT/B,KAAK,mBACLE,OAAO,QACN,eAAY,IAAwB,GAAhBU,KAAKC,SAC1B,kBAAgB,QAChBT,OAAO,e,OAzQjB,SA6QI,QAA8C,UAArC,QAAK,oBAAE,EAAA4B,cAAA,EAAAA,gBAAA,KAAc,YAC9B,QAAmD,UAA1C,QAAK,oBAAE,EAAAC,kBAAA,EAAAA,oBAAA,KAAkB,a,CC9QtC,SAASC,EAAmBC,EAAKC,GAE/B,OAAOxB,KAAKC,UAAYuB,EAAMD,GAAOA,CACvC,CACO,SAASE,EAAkBC,EAAGC,EAAGC,EAAGC,GAIzC,IAFA,IAAIzD,EAAS,GAEJyB,EAAI,EAAGA,EAAIgC,EAAgBhC,IAAK,CAGvC,IAAIiC,EACD9B,KAAK+B,GAAK,EAAIF,EAAkBhC,EACjCyB,GACGtB,KAAK+B,GAAK,IAAMF,EACjB7B,KAAK+B,GAAK,IAAMF,GAEhB1C,EAAIa,KAAKgC,IAAIF,GAAUH,EACvBzC,EACFc,KAAKiC,MAAO,EAAK9C,EAAIA,GAAMwC,EAAIA,KAAO,EAAIC,EAAIzC,GAAMuC,EAAIA,GACxDJ,GAAoBI,EAAI,IAAOA,EAAI,KAErCtD,EAAO8D,KAAK,CAAChD,EAAGC,GAClB,CACA,IAASU,EAAIgC,EAAgBhC,EAAI,EAAGA,IAAK,CAEnCiC,EACD9B,KAAK+B,GAAK,EAAIF,EAAkBhC,EACjCyB,GACGtB,KAAK+B,GAAK,IAAMF,EACjB7B,KAAK+B,GAAK,IAAMF,GAEhB1C,EAAIa,KAAKgC,IAAIF,GAAUH,EACvBzC,GACDc,KAAKiC,MAAO,EAAK9C,EAAIA,GAAMwC,EAAIA,KAAO,EAAIC,EAAIzC,GAAMuC,EAAIA,GACzDJ,GAAoBI,EAAI,IAAOA,EAAI,KAErCtD,EAAO8D,KAAK,CAAChD,EAAGC,GAClB,CACA,IAASU,EAAI,EAAGA,EAAIgC,EAAgBhC,IAAK,CAEnCiC,EACD9B,KAAK+B,GAAK,EAAIF,EAAkBhC,EACjCyB,GACGtB,KAAK+B,GAAK,IAAMF,EACjB7B,KAAK+B,GAAK,IAAMF,GAEhB1C,GAAKa,KAAKgC,IAAIF,GAAUH,EACxBzC,GACDc,KAAKiC,MAAO,EAAK9C,EAAIA,GAAMwC,EAAIA,KAAO,EAAIC,EAAIzC,GAAMuC,EAAIA,GACzDJ,GAAoBI,EAAI,IAAOA,EAAI,KAErCtD,EAAO8D,KAAK,CAAChD,EAAGC,GAClB,CACA,IAASU,EAAIgC,EAAgBhC,EAAI,EAAGA,IAAK,CAEnCiC,EACD9B,KAAK+B,GAAK,EAAIF,EAAkBhC,EACjCyB,GACGtB,KAAK+B,GAAK,IAAMF,EACjB7B,KAAK+B,GAAK,IAAMF,GAEhB1C,GAAKa,KAAKgC,IAAIF,GAAUH,EACxBzC,EACFc,KAAKiC,MAAO,EAAK9C,EAAIA,GAAMwC,EAAIA,KAAO,EAAIC,EAAIzC,GAAMuC,EAAIA,GACxDJ,GAAoBI,EAAI,IAAOA,EAAI,KAErCtD,EAAO8D,KAAK,CAAChD,EAAGC,GAClB,CACA,OAAOf,CACT,CAEA,SAAS+D,EAAuBC,EAAQV,EAAGC,GACrCS,EAAS,IACXA,EAAS,GAEPA,EAASpC,KAAK+B,GAAK,IACrBK,EAASpC,KAAK+B,GAAK,GAIrB,MAAMM,EAAIrC,KAAKsC,IAAIF,GAEnB,GAAIpC,KAAKuC,IAAIH,EAASpC,KAAK+B,GAAK,GAAK,KACnC,MAAO,CAAE7C,EAAG,EAAGC,EAAGwC,GAGpB,MAAMxC,EAAIkD,EAAIX,EACd,GAAIvC,EAAIwC,EAEN,MAAO,CAAEzC,EAAGwC,EAAGvC,EAAGA,GACb,CAGL,MAAMD,EAAIyC,EAAIU,EAEd,MAAO,CAAEnD,EAAGA,EAAGC,EAAGwC,EACpB,CACF,CAEO,SAASa,EAAqCd,EAAGC,EAAGE,GAIzD,IADA,IAAIzD,EAAS,GACJyB,EAAI,EAAGA,EAAIgC,EAAgBhC,IAAK,CACvC,IAAIiC,EACD9B,KAAK+B,GAAK,EAAIF,EAAkBhC,EACjCyB,GACGtB,KAAK+B,GAAK,GAAKF,EAChB7B,KAAK+B,GAAK,GAAKF,GAEfY,EAAeN,EAAuBL,EAAQJ,EAAGC,GACrDvD,EAAO8D,KAAK,CAACO,EAAavD,EAAGuD,EAAatD,GAC5C,CACA,IAASU,EAAIgC,EAAgBhC,EAAI,EAAGA,IAAK,CAEnCiC,EACD9B,KAAK+B,GAAK,EAAIF,EAAkBhC,EACjCyB,GACGtB,KAAK+B,GAAK,GAAKF,EAChB7B,KAAK+B,GAAK,GAAKF,GAEfY,EAAeN,EAAuBL,EAAQJ,EAAGC,GACrDvD,EAAO8D,KAAK,EAAEO,EAAavD,EAAGuD,EAAatD,GAC7C,CACA,IAASU,EAAI,EAAGA,EAAIgC,EAAgBhC,IAAK,CAGnCiC,EACD9B,KAAK+B,GAAK,EAAIF,EAAkBhC,EACjCyB,GACGtB,KAAK+B,GAAK,GAAKF,EAChB7B,KAAK+B,GAAK,GAAKF,GAEfY,EAAeN,EAAuBL,EAAQJ,EAAGC,GACrDvD,EAAO8D,KAAK,EAAEO,EAAavD,GAAIuD,EAAatD,GAC9C,CACA,IAASU,EAAIgC,EAAgBhC,EAAI,EAAGA,IAAK,CAGnCiC,EACD9B,KAAK+B,GAAK,EAAIF,EAAkBhC,EACjCyB,GACGtB,KAAK+B,GAAK,GAAKF,EAChB7B,KAAK+B,GAAK,GAAKF,GAEfY,EAAeN,EAAuBL,EAAQJ,EAAGC,GACrDvD,EAAO8D,KAAK,CAACO,EAAavD,GAAIuD,EAAatD,GAC7C,CACA,OAAOf,CACT,CAEO,SAASsE,EAA2BC,EAAY,KAwBrD,IAvBA,IAAIC,EAAatB,EAAmB,GAAI,KACpCuB,EAAavB,EAAmB,GAAI,KAEpCwB,EAAaxB,EAAmB,GAAI,IACpCyB,EAAazB,EAAmB,GAAI,KACpC0B,EACF1B,EAAmB,KAAO,OAAUtB,KAAKC,SAAW,GAAM,GAAK,GAC7DgD,EACF3B,EAAmB,KAAO,OAAUtB,KAAKC,SAAW,GAAM,GAAK,GAC7DiD,EAAkB5B,GAAoB,EAAG,GACzC6B,EAAkB7B,GAAoB,GAAI,IAE1C8B,EAAkB9B,GAAoB,EAAG,GACzC+B,EAAkB/B,GAAoB,EAAG,IACzCgC,EAAatD,KAAKC,SAAW,GAC7BsD,EAAavD,KAAKC,SAAW,GAE7BuD,EAAWF,EACX7B,EAAkBmB,EAAYC,EAAYG,EAAQL,GAClDH,EAAqCI,EAAYC,EAAYF,GAC7Dc,EAAWF,EACX9B,EAAkBsB,EAAYD,EAAYG,EAAQN,GAClDH,EAAqCO,EAAYD,EAAYH,GACxD9C,EAAI,EAAGA,EAAI2D,EAASE,OAAQ7D,IACnC2D,EAAS3D,GAAG,IAAMqD,EAClBM,EAAS3D,GAAG,IAAMsD,EAClBM,EAAS5D,GAAG,IAAMwD,EAClBI,EAAS5D,GAAG,IAAMuD,EAEpB,IAAIO,EAAU,GACd,IAAIC,EAAS,CAAC,EAAG,GACjB,IAAS/D,EAAI,EAAGA,EAAI2D,EAASE,OAAQ7D,IACnC8D,EAAQzB,KAAK,CACM,GAAjBsB,EAAS3D,GAAG,GACiD,GAA3D4D,GAAU5D,EAAI2D,EAASE,OAAS,GAAKF,EAASE,QAAQ,GACvC,GAAjBF,EAAS3D,GAAG,GACiD,GAA3D4D,GAAU5D,EAAI2D,EAASE,OAAS,GAAKF,EAASE,QAAQ,KAE1DE,EAAO,IAAMD,EAAQ9D,GAAG,GACxB+D,EAAO,IAAMD,EAAQ9D,GAAG,GAE1B+D,EAAO,IAAMD,EAAQD,OACrBE,EAAO,IAAMD,EAAQD,OAErB,IAAS7D,EAAI,EAAGA,EAAI8D,EAAQD,OAAQ7D,IAClC8D,EAAQ9D,GAAG,IAAM+D,EAAO,GACxBD,EAAQ9D,GAAG,IAAM+D,EAAO,GAG1B,IAAI9F,EAAQ6F,EAAQ,GAAG,GAAKA,EAAQA,EAAQD,OAAS,GAAG,GACpD3F,EACF4F,EAAQA,EAAQD,OAAS,GAAG,GAAKC,EAA0B,EAAjBA,EAAQD,OAAc,GAAG,GAKrE,OAHAC,EAAQzB,KAAKyB,EAAQ,IACrBA,EAAQzB,KAAKyB,EAAQ,IAEd,CAAEE,KAAMF,EAAS7F,MAAOA,EAAOC,OAAQA,EAAQ6F,OAAQ,CAAC,EAAG,GACpE,CClNA,SAAS,EAAmBrC,EAAKC,GAE7B,OAAOxB,KAAKC,UAAYuB,EAAMD,GAAOA,CACzC,CAEA,SAASuC,EAAYC,EAAIC,EAAIC,EAAIC,EAAIC,GACjC,IAAIjF,GAAK,EAAIiF,IAAM,EAAIJ,EAAG,GAAK,GAAK,EAAII,IAAM,EAAIA,EAAIH,EAAG,GAAK,GAAK,EAAIG,GAAKA,GAAK,EAAIF,EAAG,GAAKE,GAAK,EAAID,EAAG,GACrG/E,GAAK,EAAIgF,IAAM,EAAIJ,EAAG,GAAK,GAAK,EAAII,IAAM,EAAIA,EAAIH,EAAG,GAAK,GAAK,EAAIG,GAAKA,GAAK,EAAIF,EAAG,GAAKE,GAAK,EAAID,EAAG,GACzG,MAAO,CAAChF,EAAGC,EACf,CAEA,SAASiF,EAAsBtG,GAC3B,IAAIuG,EAAerE,KAAKC,SAAWnC,EAAQ,IACvCwG,EAAetE,KAAKC,SAAWnC,EAAQ,IACvCyG,EAAiC,GAAhBvE,KAAKC,SAAiB,GACvCuE,EAAiC,GAAhBxE,KAAKC,SAAiB,GACvCwE,EAAiC,GAAhBzE,KAAKC,SAAiB,GACvCyE,EAAiC,GAAhB1E,KAAKC,SAAiB,GACvC0E,EAA0B3E,KAAKC,SAC/B2E,EAA2B5E,KAAKC,SAChC4E,EAAW,EAAE/G,EAAQ,EAAIyG,EAAiBzG,EAAQ,GAAI2G,EAAiBJ,EAAe,IACtFS,EAAW,CAAChH,EAAQ,EAAI0G,EAAiB1G,EAAQ,GAAI4G,EAAiBL,EAAe,IAGrFU,EAAiBD,EAAS,GAAKD,EAAS,GAExCG,EAAsB,GAAoBD,EAAiB,GAAMA,EAAiB,KAClFE,EAAuB,GAAoBF,EAAiB,GAAMA,EAAiB,KACnFG,EAAsBP,EAA0BN,EAChDc,EAAuBP,EAA2BP,EAClDe,EAAsB,EAAmBJ,EAAqBD,EAAiB,KAC/EM,EAAuB,EAAmBJ,EAAsBF,EAAiB,KACjFO,EAAsB,EAA0C,EAAtBJ,EAAyBZ,GACnEiB,EAAuB,EAA2C,EAAvBJ,EAA0Bb,GAErEkB,EAAiBxF,KAAKC,SACtBwF,EAAkBzF,KAAKC,SAEvByF,EAAiB1F,KAAKC,SACtB0F,EAAkB3F,KAAKC,SAC3B,MAAO,CACHoE,aAAcA,EACdC,aAAcA,EACdC,eAAgBA,EAChBC,eAAgBA,EAChBC,eAAgBA,EAChBC,eAAgBA,EAChBC,wBAAyBA,EACzBC,yBAA0BA,EAC1BG,eAAgBA,EAChBC,oBAAqBA,EACrBC,qBAAsBA,EACtBC,oBAAqBA,EACrBC,qBAAsBA,EACtBC,oBAAqBA,EACrBC,qBAAsBA,EACtBC,oBAAqBA,EACrBC,qBAAsBA,EACtBC,eAAgBA,EAChBC,gBAAiBA,EACjBC,eAAgBA,EAChBC,gBAAiBA,EAEzB,CAEO,SAASC,EAAkBC,EAAO/H,EAAQ,IAE7C,IAAI+G,EAAW,EAAE/G,EAAQ,EAAI+H,EAAMtB,eAAiBzG,EAAQ,GAAI+H,EAAMpB,eAAiBoB,EAAMxB,aAAe,IACxGS,EAAW,CAAChH,EAAQ,EAAI+H,EAAMrB,eAAiB1G,EAAQ,GAAI+H,EAAMnB,eAAiBmB,EAAMxB,aAAe,IACvGyB,EAAWjB,EACXkB,EAAWjB,EAIXkB,GAHiBlB,EAAS,GAAKD,EAAS,GAG7B,CAACA,EAAS,GAAKgB,EAAMb,oBAAqBH,EAAS,GAAKgB,EAAMX,sBACzEe,EAAW,CAACnB,EAAS,GAAKe,EAAMZ,qBAAsBH,EAAS,GAAKe,EAAMV,sBAI1Ee,EAAW,CAACJ,EAAS,GAAKD,EAAMT,oBAAqBU,EAAS,GAAKD,EAAMP,qBACzEa,EAAW,CAACJ,EAAS,GAAKF,EAAMR,qBAAsBU,EAAS,GAAKF,EAAMN,sBAG1Ea,EAAsB,GACtBC,EAAmC,GACnCC,EAAoC,GACpCC,EAAkC,CAAC1B,EAAS,IAAM,EAAIgB,EAAML,gBAAkBU,EAAS,GAAKL,EAAML,eAAgBX,EAAS,IAAM,EAAIgB,EAAML,gBAAkBU,EAAS,GAAKL,EAAML,gBACjLgB,EAAmC,CAAC1B,EAAS,IAAM,EAAIe,EAAMJ,iBAAmBU,EAAS,GAAKN,EAAMJ,gBAAiBX,EAAS,IAAM,EAAIe,EAAMJ,iBAAmBU,EAAS,GAAKN,EAAMJ,iBACzL,IAAK,IAAItB,EAAI,EAAGA,EAAI,IAAKA,IACrBiC,EAAoBlE,KAAK4B,EAAYe,EAAUmB,EAAUC,EAAUnB,EAAUX,EAAI,MACjFkC,EAAiCnE,KAAK4B,EAAYyC,EAAiC1B,EAAUmB,EAAUC,EAAU9B,EAAI,MACrHmC,EAAkCpE,KAAK4B,EAAYkC,EAAUC,EAAUnB,EAAU0B,EAAkCrC,EAAI,MAG3H,IAAK,IAAItE,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAI4G,IAAW,GAAO5G,GAAK,KAAS,EACpCuG,EAAoBvG,GAAK,CAACuG,EAAoBvG,GAAG,IAAM,EAAI4G,GAAUJ,EAAiCxG,EAAI,IAAI,GAAK4G,EAAQL,EAAoBvG,GAAG,IAAM,EAAI4G,GAAUJ,EAAiCxG,EAAI,IAAI,GAAK4G,GACpNL,EAAoBvG,EAAI,IAAM,CAACuG,EAAoBvG,EAAI,IAAI,GAAK4G,EAASH,EAAkCzG,GAAG,IAAM,EAAI4G,GAASL,EAAoBvG,EAAI,IAAI,GAAK4G,EAASH,EAAkCzG,GAAG,IAAM,EAAI4G,GAC9N,CAIA,IAAIC,EAAsB,GACtBC,EAAmC,GACnCC,EAAoC,GACpCC,EAAkC,CAACf,EAAS,IAAM,EAAID,EAAML,gBAAkBQ,EAAS,GAAKH,EAAML,eAAgBM,EAAS,IAAM,EAAID,EAAML,gBAAkBQ,EAAS,GAAKH,EAAML,gBACjLsB,EAAmC,CAACf,EAAS,IAAM,EAAIF,EAAMF,iBAAmBM,EAAS,GAAKJ,EAAMF,gBAAiBI,EAAS,IAAM,EAAIF,EAAMF,iBAAmBM,EAAS,GAAKJ,EAAMF,iBACzL,IAAK,IAAIxB,EAAI,EAAGA,EAAI,IAAKA,IACrBuC,EAAoBxE,KAAK4B,EAAYgC,EAAUI,EAAUC,EAAUJ,EAAU5B,EAAI,MACjFwC,EAAiCzE,KAAK4B,EAAY+C,EAAiCf,EAAUI,EAAUC,EAAUhC,EAAI,MACrHyC,EAAkC1E,KAAK4B,EAAYoC,EAAUC,EAAUJ,EAAUe,EAAkC3C,EAAI,MAG3H,IAAK,IAAItE,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAI4G,IAAW,GAAO5G,GAAK,KAAS,EACpC6G,EAAoB7G,GAAK,CAAC6G,EAAoB7G,GAAG,IAAM,EAAI4G,GAAUE,EAAiC9G,EAAI,IAAI,GAAK4G,EAAQC,EAAoB7G,GAAG,IAAM,EAAI4G,GAAUE,EAAiC9G,EAAI,IAAI,GAAK4G,GACpNC,EAAoB7G,EAAI,IAAM,CAAC6G,EAAoB7G,EAAI,IAAI,GAAK4G,EAASG,EAAkC/G,GAAG,IAAM,EAAI4G,GAASC,EAAoB7G,EAAI,IAAI,GAAK4G,EAASG,EAAkC/G,GAAG,IAAM,EAAI4G,GAC9N,CACA,IAAK,IAAI5G,EAAI,EAAGA,EAAI,IAAKA,IACrB6G,EAAoB7G,GAAG,IAAM6G,EAAoB7G,GAAG,GACpDuG,EAAoBvG,GAAG,IAAMuG,EAAoBvG,GAAG,GAGxD,IAAIkH,EAAY,CAACX,EAAoB,IAAI,GAAK,EAAMM,EAAoB,IAAI,GAAK,EAAKN,EAAoB,IAAI,GAAK,EAAMM,EAAoB,IAAI,GAAK,GAEtJ,IAAK,IAAI7G,EAAI,EAAGA,EAAI,IAAKA,IAErB6G,EAAoB7G,GAAG,IAAMkH,EAAU,GACvCL,EAAoB7G,GAAG,IAAMkH,EAAU,GACvCX,EAAoBvG,GAAG,IAAMkH,EAAU,GACvCX,EAAoBvG,GAAG,IAAMkH,EAAU,GAK3C,OAHAA,EAAY,CAAC,EAAG,GAGT,CAAEC,MAAOZ,EAAqBa,MAAOP,EAAqB9C,OAAQ,CAACmD,GAC9E,CAEO,SAASG,GAAiBpJ,EAAQ,IACrC,IAAIqJ,EAAa/C,EAAsBtG,GAEnCsJ,EAAc,IAAKD,GAGvB,IAAK,IAAIrH,KAAOsH,EAEoB,kBAArBA,EAAYtH,KAEnBsH,EAAYtH,IAAQ,GAAoBsH,EAAYtH,GAAO,EAAKsH,EAAYtH,GAAO,IAG3F,IAAIuH,EAAWzB,EAAkBuB,EAAYrJ,GACzCwJ,EAAY1B,EAAkBwB,EAAatJ,GAE/C,IAAK,IAAIgC,KAAOuH,EACZ,GAA6B,kBAAlBA,EAASvH,GAChB,IAAK,IAAID,EAAI,EAAGA,EAAIwH,EAASvH,GAAK4D,OAAQ7D,IACtCwH,EAASvH,GAAKD,GAAG,IAAMwH,EAASvH,GAAKD,GAAG,GAIpD,MAAO,CAAE0H,KAAMF,EAAUG,MAAOF,EACpC,CClKA,SAAS,GAAmB/F,EAAKC,GAE/B,OAAOxB,KAAKC,UAAYuB,EAAMD,GAAOA,CACvC,CACA,SAASkG,GAAUC,GACjB,OAAIA,GAAK,EAAU,EACZA,EAAID,GAAUC,EAAI,EAC3B,CAEA,SAASC,GAAoBD,EAAG9F,GAC9B,OAAO6F,GAAUC,IAAMD,GAAU7F,GAAK6F,GAAUC,EAAI9F,GACtD,CAEA,SAASgG,GAAqBzD,EAAG0D,GAC/B,IAAI3I,EAAI,EAAGC,EAAI,EACf,MAAMuI,EAAIG,EAAcnE,OAAS,EAEjC,IAAK,IAAI7D,EAAI,EAAGA,GAAK6H,EAAG7H,IAAK,CACzB,IAAIiI,EAAWH,GAAoBD,EAAG7H,GAClC6B,EAAI1B,KAAK+H,IAAI,EAAI5D,EAAGuD,EAAI7H,GACxB8B,EAAI3B,KAAK+H,IAAI5D,EAAGtE,GACpBX,GAAK4I,EAAWpG,EAAIC,EAAIkG,EAAchI,GAAGX,EACzCC,GAAK2I,EAAWpG,EAAIC,EAAIkG,EAAchI,GAAGV,CAC7C,CAEA,MAAO,CAACD,EAAGC,EACb,CAEA,SAAS6I,GAAmBH,EAAeI,GACzC,IAAIC,EAAQ,GACZ,IAAK,IAAIrI,EAAI,EAAGA,GAAKoI,EAAgBpI,IAAK,CACtC,IAAIsE,EAAItE,EAAIoI,EACRE,EAAQP,GAAqBzD,EAAG0D,GACpCK,EAAMhG,KAAKiG,EACf,CACA,OAAOD,CACT,CAEO,SAASE,GAAmBC,EAAcC,EAAe,KAG9D,IAFA,IAAIC,EAAmBF,EAAaG,MAAM,EAAGH,EAAa3E,OAAS,GAC/DC,EAAU,GACL9D,EAAI,EAAGA,EAAIyI,EAAczI,IAAI,CAKpC,IAJA,IAAI4I,EAAgB,GAAKzI,KAAK0I,MAAM,IAAoB,EAAG,IAEvDC,EAAY,GACZC,EAAe5I,KAAK0I,MAAM,GAAmB,GAAI,MAC5CG,EAAI,EAAGA,EAAIJ,EAAeI,IACjCF,EAAUzG,KAAK,CAAChD,EAAGqJ,GAAkBA,EAAiB7E,QAAUmF,EAAID,IAAiBL,EAAiB7E,QAAQ,GAAIvE,EAAEoJ,GAAkBA,EAAiB7E,QAAUmF,EAAID,IAAiBL,EAAiB7E,QAAQ,KAEjN,IAAIoF,EAAKd,GAAmBW,EAAWF,GACvCE,EAAY,GACZC,EAAe5I,KAAK0I,MAAM,GAAmB,GAAI,MACjD,IAASG,EAAI,EAAGA,EAAIJ,EAAeI,IACjCF,EAAUzG,KAAK,CAAChD,EAAGqJ,GAAkBA,EAAiB7E,SAAWmF,EAAID,IAAiBL,EAAiB7E,QAAQ,GAAIvE,EAAEoJ,GAAkBA,EAAiB7E,SAAWmF,EAAID,IAAiBL,EAAiB7E,QAAQ,KAEnN,IAAIqF,EAAKf,GAAmBW,EAAWF,GACnCvH,EAAI,GACR,IAAS2H,EAAI,EAAGA,EAAIJ,EAAeI,IACjC3H,EAAEgB,KAAK,CAAC4G,EAAGD,GAAG,IAAMA,GAAK,EAAIJ,KAAmB,EAAIM,EAAGF,GAAG,IAAM,GAAKA,GAAK,EAAIJ,KAAmB,GAAIK,EAAGD,GAAG,IAAMA,GAAK,EAAIJ,KAAmB,EAAIM,EAAGF,GAAG,IAAM,GAAKA,GAAK,EAAIJ,KAAmB,KAGhM9E,EAAQzB,KAAKhB,EACf,CACA,OAAOyC,CACT,CACO,SAASqF,GAAmBX,EAAcC,EAAe,KAG9D,IAFA,IAAIC,EAAmBF,EAAaG,MAAM,EAAGH,EAAa3E,OAAS,GAC/DC,EAAU,GACL9D,EAAI,EAAGA,EAAIyI,EAAczI,IAAI,CACpC,IAAI4I,EAAgB,GAAKzI,KAAK0I,MAAM,IAAoB,EAAG,IAEvDC,EAAY,GACZM,EAAcjJ,KAAK0I,MAAM,GAAmB,GAAI,MACpDC,EAAUzG,KAAK,CAAChD,EAAGqJ,GAAkBA,EAAiB7E,OAASuF,GAAeV,EAAiB7E,QAAQ,GAAIvE,EAAEoJ,GAAkBA,EAAiB7E,OAASuF,GAAeV,EAAiB7E,QAAQ,KAEjM,IAAK,IAAImF,EAAI,EAAGA,EAAIJ,EAAgB,EAAGI,IACrCI,EAAcjJ,KAAK0I,MAAM,GAAmB,GAAI,MAChDC,EAAUzG,KAAK,CAAChD,EAAGqJ,GAAkBA,EAAiB7E,OAASuF,GAAeV,EAAiB7E,QAAQ,GAAIvE,EAAEoJ,GAAkBA,EAAiB7E,OAASuF,GAAeV,EAAiB7E,QAAQ,KAEnM,IAAIxC,EAAI8G,GAAmBW,EAAWF,GAEtC9E,EAAQzB,KAAKhB,EACf,CACA,OAAOyC,CACT,CAGO,SAASuF,GAAmBb,EAAcC,EAAe,KAK9D,IAHA,IAAIC,EAAmBF,EAAaG,MAAM,EAAGH,EAAa3E,OAAS,GAC/DC,EAAU,GACVwF,EAAgB,GACXtJ,EAAI,EAAGA,EAAIyI,EAAczI,IAChCsJ,EAAcjH,KAAKlC,KAAK0I,MAAM,GAAmB,GAAI,OAEvDS,EAAcC,OACd,IAASvJ,EAAI,EAAGA,EAAIyI,EAAczI,IAAI,CAOpC,IANA,IAAI4I,EAAgB,GAAKzI,KAAK0I,MAAM,IAAoB,EAAG,IAEvDC,EAAY,GACZC,EAAeO,EAActJ,GAC7BoH,EAAQ,GAAmB,GAAM,KACjCoC,EAAUrJ,KAAKC,SAAW,GAAM,GAAK,EAChC4I,EAAI,EAAGA,EAAIJ,EAAeI,IAAI,CACrC,IAAIS,EAAa,GAAmB,GAAK,GACrCC,GAAW,GAAKV,EAAIJ,IAAkBa,IAAe,EAAIrC,GAASA,EACtE0B,EAAUzG,KAAK,CAAChD,EAAGqJ,GAAkBA,EAAiB7E,QAAU2F,EAAUR,EAAID,IAAiBL,EAAiB7E,QAAQ,GAAK6F,EAASpK,EAAEoJ,GAAkBA,EAAiB7E,QAAU2F,EAAUR,EAAID,IAAiBL,EAAiB7E,QAAQ,GAAK6F,GACpP,CACA,IAAIrI,EAAI8G,GAAmBW,EAAWF,GAEtC,GADIzI,KAAKC,SAAW,KAAKiB,EAAIA,EAAEmI,WACT,GAAlB1F,EAAQD,OAAZ,CAIA,IAAI8F,EAAgB7F,EAAQA,EAAQD,OAAS,GAAGC,EAAQA,EAAQD,OAAS,GAAGA,OAAS,GACjF+F,EAAqBzJ,KAAKiC,MAAMf,EAAE,GAAG,GAAKsI,EAAc,KAAO,GAAKtI,EAAE,GAAG,GAAKsI,EAAc,KAAO,GACnGxJ,KAAKC,SAAW,IAAOwJ,EAAqB,IAC9C9F,EAAQA,EAAQD,OAAS,GAAKC,EAAQA,EAAQD,OAAS,GAAGgG,OAAOxI,GAEjEyC,EAAQzB,KAAKhB,EANf,MAFEyC,EAAQzB,KAAKhB,EAUjB,CACA,OAAOyC,CACT,CAEO,SAASgG,GAAmBtB,EAAcC,EAAe,KAI9D,IAHA,IAAIC,EAAmBF,EAAaG,MAAM,EAAGH,EAAa3E,OAAS,GAC/DC,EAAU,GACVwF,EAAgB,GACXtJ,EAAI,EAAGA,EAAIyI,EAAczI,IAChCsJ,EAAcjH,KAAKlC,KAAK0I,MAAM,GAAmB,GAAI,OAEvDS,EAAcC,OACd,IAAIQ,EAAa5J,KAAK0I,MAAM,GAAmB,EAAG,MAClD,IAAS7I,EAAI,EAAGA,EAAIyI,EAAczI,IAAI,CACpC,IAAI4I,EAAgB,GAAKzI,KAAK0I,MAAM,IAAoB,EAAG,IAEvDC,EAAY,GACZC,EAAeO,EAActJ,GAC7BoH,EAAQ,GAAmB,EAAI,KAC/BjH,KAAKC,SAAW,KAAKgH,EAAQ,GAAmB,EAAI,IAExD,IADA,IAAIoC,EAAUT,EAAegB,EAAa,GAAK,EACtCf,EAAI,EAAGA,EAAIJ,EAAeI,IAAI,CACrC,IAAIS,EAAa,GAAmB,GAAK,GACrCC,GAAW,GAAKV,EAAI,IAAoBS,IAAe,EAAIrC,GAASA,EACxE0B,EAAUzG,KAAK,CAAChD,EAAGqJ,GAAkBA,EAAiB7E,QAAU2F,EAAUR,EAAI,EAAID,IAAiBL,EAAiB7E,QAAQ,GAAK6F,EAASpK,EAAEoJ,GAAkBA,EAAiB7E,QAAU2F,EAAUR,EAAI,EAAID,IAAiBL,EAAiB7E,QAAQ,IACvP,CACA,IAAIxC,EAAI8G,GAAmBW,EAAWF,GACtC9E,EAAQzB,KAAKhB,EACf,CACA,OAAOyC,CACT,CCvJA,SAAS,GAAmBpC,EAAKC,GAE7B,OAAOxB,KAAKC,UAAYuB,EAAMD,GAAOA,CACzC,CACA,SAAS,GAAYwC,EAAIC,EAAIC,EAAIC,EAAIC,GACjC,IAAIjF,GAAK,EAAIiF,IAAM,EAAIJ,EAAG,GAAK,GAAK,EAAII,IAAM,EAAIA,EAAIH,EAAG,GAAK,GAAK,EAAIG,GAAKA,GAAK,EAAIF,EAAG,GAAKE,GAAK,EAAID,EAAG,GACrG/E,GAAK,EAAIgF,IAAM,EAAIJ,EAAG,GAAK,GAAK,EAAII,IAAM,EAAIA,EAAIH,EAAG,GAAK,GAAK,EAAIG,GAAKA,GAAK,EAAIF,EAAG,GAAKE,GAAK,EAAID,EAAG,GACzG,MAAO,CAAChF,EAAGC,EACf,CACA,SAAS,GAAkBuC,EAAGC,EAAGC,EAAGC,GAIhC,IAFA,IAAIzD,EAAS,GAEJyB,EAAI,EAAGA,EAAIgC,EAAgBhC,IAAK,CAGvC,IAAIiC,EACD9B,KAAK+B,GAAK,EAAIF,EAAkBhC,EACjC,IACGG,KAAK+B,GAAK,IAAMF,EACjB7B,KAAK+B,GAAK,IAAMF,GAEhB1C,EAAIa,KAAKgC,IAAIF,GAAUH,EACvBzC,EACFc,KAAKiC,MAAO,EAAK9C,EAAIA,GAAMwC,EAAIA,KAAO,EAAIC,EAAIzC,GAAMuC,EAAIA,GACxD,IAAoBA,EAAI,IAAOA,EAAI,KAErCtD,EAAO8D,KAAK,CAAChD,EAAGC,GAClB,CACA,IAASU,EAAIgC,EAAgBhC,EAAI,EAAGA,IAAK,CAEnCiC,EACD9B,KAAK+B,GAAK,EAAIF,EAAkBhC,EACjC,IACGG,KAAK+B,GAAK,IAAMF,EACjB7B,KAAK+B,GAAK,IAAMF,GAEhB1C,EAAIa,KAAKgC,IAAIF,GAAUH,EACvBzC,GACDc,KAAKiC,MAAO,EAAK9C,EAAIA,GAAMwC,EAAIA,KAAO,EAAIC,EAAIzC,GAAMuC,EAAIA,GACzD,IAAoBA,EAAI,IAAOA,EAAI,KAErCtD,EAAO8D,KAAK,CAAChD,EAAGC,GAClB,CACA,IAASU,EAAI,EAAGA,EAAIgC,EAAgBhC,IAAK,CAEnCiC,EACD9B,KAAK+B,GAAK,EAAIF,EAAkBhC,EACjC,IACGG,KAAK+B,GAAK,IAAMF,EACjB7B,KAAK+B,GAAK,IAAMF,GAEhB1C,GAAKa,KAAKgC,IAAIF,GAAUH,EACxBzC,GACDc,KAAKiC,MAAO,EAAK9C,EAAIA,GAAMwC,EAAIA,KAAO,EAAIC,EAAIzC,GAAMuC,EAAIA,GACzD,IAAoBA,EAAI,IAAOA,EAAI,KAErCtD,EAAO8D,KAAK,CAAChD,EAAGC,GAClB,CACA,IAASU,EAAIgC,EAAgBhC,EAAI,EAAGA,IAAK,CAEnCiC,EACD9B,KAAK+B,GAAK,EAAIF,EAAkBhC,EACjC,IACGG,KAAK+B,GAAK,IAAMF,EACjB7B,KAAK+B,GAAK,IAAMF,GAEhB1C,GAAKa,KAAKgC,IAAIF,GAAUH,EACxBzC,EACFc,KAAKiC,MAAO,EAAK9C,EAAIA,GAAMwC,EAAIA,KAAO,EAAIC,EAAIzC,GAAMuC,EAAIA,GACxD,IAAoBA,EAAI,IAAOA,EAAI,KAErCtD,EAAO8D,KAAK,CAAChD,EAAGC,GAClB,CACA,OAAOf,CACT,CAEK,SAASyL,GAAoBxB,EAAcyB,EAAYC,GAEnC1B,EAAaG,MAAM,EAAGH,EAAa3E,OAAS,GAanE,IAbA,IAEIsG,EAAc,GAAmBF,EAAa,EAAGA,EAAa,KAC9DG,EAAa,GAAmBH,EAAa,EAAGA,EAAa,KAC7DI,EAAc,GAAmBH,EAAY,GAAIA,EAAY,GAC7DI,GAAcD,EAAc,IAAoBH,EAAY,GAAIA,EAAY,IAC5EK,EAAa,CAACF,EAAaF,GAC3BK,EAAY,CAACF,EAAYF,GAEzBK,EAAgB,CAAC,GAAmB,EAAGJ,GAAc,GAAmBD,EAAa,EAAGH,EAAa,MACrGS,EAAgB,CAAC,GAAmBJ,EAAY,GAAI,GAAmBF,EAAa,EAAGH,EAAa,MAEpG3I,EAAc,GACTtB,EAAI,EAAGA,EAAI,EAAGA,GAAK,IACxBsB,EAAYe,KAAK,GAAYmI,EAAWE,EAAeD,EAAeF,EAAYvK,IAEtF,GAAIG,KAAKC,SAAW,GAChB,IAASJ,EAAI,EAAGA,EAAI,EAAGA,GAAK,IACxBsB,EAAYe,KAAK,GAAYkI,EAAYE,EAAeC,EAAeF,EAAWxK,QAGtF,KAAI2K,EAAmB,GAAmB,EAAG,IAC7C,IAAS3K,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAC1BsB,EAAYe,KAAK,CAACf,EAAY,IAAI,IAAM,EAAItB,EAAI,KAASsB,EAAY,GAAG,GAAKtB,EAAI,KAAQsB,EAAY,IAAI,IAAM,EAAItB,EAAI,KAASsB,EAAY,GAAG,GAAKtB,EAAI,MAAU,EAAI2K,GAAoBrJ,EAAY,GAAKtB,GAAG,GAAK2K,GAFtK,CAKrD,OAAOrJ,CACX,CAEO,SAASsJ,GAAoBpC,EAAcyB,EAAYC,GAEnC1B,EAAaG,MAAM,EAAGH,EAAa3E,OAAS,GAanE,IAbA,IAEIsG,EAAc,GAAmBF,EAAa,EAAGA,EAAa,GAC9DG,EAAa,GAAmBH,EAAa,EAAGA,EAAa,GAC7DI,EAAc,GAAmBH,EAAY,GAAIA,EAAY,GAC7DI,GAAcD,EAAc,IAAoBH,EAAY,GAAIA,EAAY,IAC5EK,EAAa,CAACF,EAAaF,GAC3BK,EAAY,CAACF,EAAYF,GAEzBK,EAAgB,CAAC,GAAmB,EAAGJ,GAAc,GAAmBD,EAAa,EAAGH,EAAa,MACrGS,EAAgB,CAAC,GAAmBJ,EAAY,GAAI,GAAmBF,EAAa,EAAGH,EAAa,MAEpG3I,EAAc,GACTtB,EAAI,EAAGA,EAAI,EAAGA,GAAK,IACxBsB,EAAYe,KAAK,GAAYmI,EAAWE,EAAeD,EAAeF,EAAYvK,IAGtF,IAAI+D,EAAS,EAAEwG,EAAW,GAAKC,EAAU,IAAM,EAAGlJ,EAAY,IAAI,GAAK,EAAIA,EAAY,IAAI,GAAK,GAChG,GAAInB,KAAKC,SAAW,GAChB,IAASJ,EAAI,EAAGA,EAAI,EAAGA,GAAK,IACxBsB,EAAYe,KAAK,GAAYkI,EAAYE,EAAeC,EAAeF,EAAWxK,QAGtF,KAAI2K,EAAmB,GAAmB,EAAG,IAC7C,IAAS3K,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAC1BsB,EAAYe,KAAK,CAACf,EAAY,IAAI,IAAM,EAAItB,EAAI,KAASsB,EAAY,GAAG,GAAKtB,EAAI,KAAQsB,EAAY,IAAI,IAAM,EAAItB,EAAI,KAASsB,EAAY,GAAG,GAAKtB,EAAI,MAAU,EAAI2K,GAAoBrJ,EAAY,GAAKtB,GAAG,GAAK2K,GAFtK,CAMrD,IAAS3K,EAAI,EAAGA,EAAIsB,EAAYuC,OAAQ7D,IACpCsB,EAAYtB,GAAG,IAAM+D,EAAO,GAC5BzC,EAAYtB,GAAG,IAAM+D,EAAO,GAE5BzC,EAAYtB,GAAG,IAAMsB,EAAYtB,GAAG,GAEpCsB,EAAYtB,GAAG,GAAyB,GAApBsB,EAAYtB,GAAG,GACnCsB,EAAYtB,GAAG,GAAyB,GAApBsB,EAAYtB,GAAG,GAEnCsB,EAAYtB,GAAG,IAAM+D,EAAO,GAC5BzC,EAAYtB,GAAG,IAAkB,GAAZ+D,EAAO,GAEhC,OAAOzC,CACX,CAEO,SAASuJ,GAAoBrC,EAAcyB,EAAYC,GAM1D,IAJA,IAAInG,EAAS,CAAC,IAAoBmG,EAAY,EAAGA,EAAY,GAAI,GAAmBD,EAAa,EAAGA,EAAa,MAE7G3I,EAAc,GAAkB,GAAmB4I,EAAY,EAAGA,EAAY,IAAK,GAAmBD,EAAa,GAAIA,EAAa,IAAK,KAAO,IAChJa,EAAuB,IAAoB3K,KAAK+B,GAAK,IAAK/B,KAAK+B,GAAK,KAC/DlC,EAAI,EAAGA,EAAIsB,EAAYuC,OAAQ7D,IAAK,CAEzC,IAAIX,EAAIiC,EAAYtB,GAAG,GACnBV,EAAIgC,EAAYtB,GAAG,GACvBsB,EAAYtB,GAAG,GAAKX,EAAIc,KAAK4K,IAAID,GAAwBxL,EAAIa,KAAKgC,IAAI2I,GACtExJ,EAAYtB,GAAG,GAAKX,EAAIc,KAAKgC,IAAI2I,GAAwBxL,EAAIa,KAAK4K,IAAID,GACtExJ,EAAYtB,GAAG,IAAM+D,EAAO,GAC5BzC,EAAYtB,GAAG,IAAM+D,EAAO,EAChC,CACA,OAAOzC,CACX,CJ8GA,SAAS,GAAmBI,EAAKC,GAE/B,OAAOxB,KAAKC,UAAYuB,EAAMD,GAAOA,CACvC,CAEA,QACEsJ,KAAM,gBACN,IAAAC,GACE,MAAO,CACLvL,UAAW,IACXF,mBAAoB,GACpBK,cAAe,GACfE,cAAe,GACfd,iBAAkB,GAClBwB,aAAc,GACdC,aAAc,GACd1B,gBAAiB,GACjBiL,WAAY,EACZC,UAAW,EACXnG,OAAQ,CAAC,EAAG,GACZmH,oBAAqB,EACrBC,eAAgB,EAChBC,eAAgB,EAChBC,gBAAiB,EACjBC,gBAAiB,EACjBC,gBAAiB,EACjBC,cAAe,CAAC,EAAG,GACnBC,eAAgB,CAAC,EAAG,GACpBnL,iBAAkB,EAClBE,iBAAkB,EAClBG,gBAAiB,EACjBC,gBAAiB,EACjBK,iBAAkB,EAClBC,iBAAkB,EAClBC,gBAAiB,EACjBC,gBAAiB,EACjBP,MAAO,GACPf,oBAAoB,EACpB4L,WAAY,CACV,eACA,kBACA,kBACA,qBACA,qBACA,qBACA,mBACA,mBACA,qBACA,mBACA,qBACA,qBACA,qBACA,oBACA,mBACA,mBACA,mBACA,mBACA,mBACA,qBACA,mBACA,qBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,qBACA,oBACA,qBACA,iBACA,oBACA,kBACA,mBACA,oBACA,oBACA,qBACA,qBACA,qBACA,mBACA,qBACA,oBACA,kBACA,mBACA,mBACA,qBACA,qBACA,qBACA,mBACA,mBACA,qBACA,mBACA,iBACA,mBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBAGF1K,UAAW,QACX5B,eAAgB,MAChBuM,iBAAkB,CAChB,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,kBACA,mBACA,kBACA,mBACA,iBACA,mBACA,mBACA,iBACA,iBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,oBACA,mBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,qBACA,qBACA,qBACA,sBAEFrK,YAAa,GAEjB,EACAsK,QAAS,CACP,YAAArK,GACEsK,KAAKnM,UAAY,IAAsB,GAAhBS,KAAKC,SAC5ByL,KAAK/L,mBAAqBK,KAAKC,SAAW,GAC1C,IAAI0L,EAAc,IAClBD,KAAKrM,mBAAqBsM,EAAY9H,KACtC6H,KAAK5B,WAAa6B,EAAY5N,OAC9B2N,KAAK3B,UAAY4B,EAAY7N,MAC7B4N,KAAK9H,OAAS+H,EAAY/H,OAC1B,IAAIgI,EAAO,GAA0BF,KAAK3B,UAAY,GAClDxC,EAAOqE,EAAKrE,KACZC,EAAQoE,EAAKpE,MACjBkE,KAAKhM,cAAgB8H,EAAMR,MAC3B0E,KAAK9L,cAAgB4H,EAAMP,MAC3ByE,KAAK5M,iBAAmB0I,EAAMR,MAC3BwB,MAAM,GAAI,IACVkB,OAAOlC,EAAMP,MAAMuB,MAAM,GAAI,IAAIa,WACpCqC,KAAKpL,aAAeiH,EAAKP,MAC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","sources":["webpack://ugly-face/./src/App.vue","webpack://ugly-face/./src/views/FaceGenerator.vue","webpack://ugly-face/./src/utils/face_shape.js","webpack://ugly-face/./src/utils/eye_shape.js","webpack://ugly-face/./src/utils/hair_lines.js","webpack://ugly-face/./src/utils/mouth_shape.js","webpack://ugly-face/./src/views/FaceGenerator.vue?1e98","webpack://ugly-face/./src/App.vue?7ccd","webpack://ugly-face/./src/main.js","webpack://ugly-face/webpack/bootstrap","webpack://ugly-face/webpack/runtime/chunk loaded","webpack://ugly-face/webpack/runtime/define property getters","webpack://ugly-face/webpack/runtime/global","webpack://ugly-face/webpack/runtime/hasOwnProperty shorthand","webpack://ugly-face/webpack/runtime/jsonp chunk loading","webpack://ugly-face/webpack/startup"],"sourcesContent":["<template>\r\n  <FaceGenerator />\r\n</template>\r\n\r\n<script>\r\nimport FaceGenerator from './views/FaceGenerator.vue'\r\n\r\nexport default {\r\n  components: { FaceGenerator },\r\n  name: 'App',\r\n}\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"container\">\r\n    <svg\r\n      viewBox=\"-100 -100 200 200\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"500\"\r\n      height=\"500\"\r\n      id=\"face-svg\"\r\n    >\r\n      <defs>\r\n        <clipPath id=\"leftEyeClipPath\">\r\n          <polyline :points=\"eyeLeftCountour\" />\r\n        </clipPath>\r\n        <clipPath id=\"rightEyeClipPath\">\r\n          <polyline :points=\"eyeRightCountour\" />\r\n        </clipPath>\r\n\r\n        <filter id=\"fuzzy\">\r\n          <feTurbulence\r\n            id=\"turbulence\"\r\n            baseFrequency=\"0.05\"\r\n            numOctaves=\"3\"\r\n            type=\"noise\"\r\n            result=\"noise\"\r\n          />\r\n          <feDisplacementMap in=\"SourceGraphic\" in2=\"noise\" scale=\"2\" />\r\n        </filter>\r\n        <linearGradient id=\"rainbowGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n          <stop\r\n            offset=\"0%\"\r\n            :style=\"\r\n              'stop-color: ' +\r\n              hairColors[Math.floor(Math.random() * 10)] +\r\n              ';  stop-opacity: 1'\r\n            \"\r\n          />\r\n          <stop\r\n            :offset=\"dyeColorOffset\"\r\n            :style=\"\r\n              'stop-color: ' +\r\n              hairColors[Math.floor(Math.random() * hairColors.length)] +\r\n              ';  stop-opacity: 1'\r\n            \"\r\n          />\r\n          <stop\r\n            offset=\"100%\"\r\n            :style=\"\r\n              'stop-color: ' +\r\n              hairColors[Math.floor(Math.random() * hairColors.length)] +\r\n              ';  stop-opacity: 1'\r\n            \"\r\n          />\r\n        </linearGradient>\r\n      </defs>\r\n      <title>That's an ugly face</title>\r\n      <desc>CREATED BY XUAN TANG, MORE INFO AT TXSTC55.GITHUB.IO</desc>\r\n      <rect\r\n        x=\"-100\"\r\n        y=\"-100\"\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        :fill=\"\r\n          backgroundColors[Math.floor(Math.random() * backgroundColors.length)]\r\n        \"\r\n      />\r\n      <polyline\r\n        id=\"faceContour\"\r\n        :points=\"computedFacePoints\"\r\n        fill=\"#ffc9a9\"\r\n        stroke=\"black\"\r\n        :stroke-width=\"3.0 / faceScale\"\r\n        stroke-linejoin=\"round\"\r\n        filter=\"url(#fuzzy)\"\r\n      />\r\n\r\n      <g\r\n        :transform=\"\r\n          'translate(' +\r\n          (center[0] + distanceBetweenEyes + rightEyeOffsetX) +\r\n          ' ' +\r\n          -(-center[1] + eyeHeightOffset + rightEyeOffsetY) +\r\n          ')'\r\n        \"\r\n      >\r\n        <polyline\r\n          id=\"rightCountour\"\r\n          :points=\"eyeRightCountour\"\r\n          fill=\"white\"\r\n          stroke=\"white\"\r\n          :stroke-width=\"0.0 / faceScale\"\r\n          stroke-linejoin=\"round\"\r\n          filter=\"url(#fuzzy)\"\r\n        />\r\n      </g>\r\n      <g\r\n        :transform=\"\r\n          'translate(' +\r\n          -(center[0] + distanceBetweenEyes + leftEyeOffsetX) +\r\n          ' ' +\r\n          -(-center[1] + eyeHeightOffset + leftEyeOffsetY) +\r\n          ')'\r\n        \"\r\n      >\r\n        <polyline\r\n          id=\"leftCountour\"\r\n          :points=\"eyeLeftCountour\"\r\n          fill=\"white\"\r\n          stroke=\"white\"\r\n          :stroke-width=\"0.0 / faceScale\"\r\n          stroke-linejoin=\"round\"\r\n          filter=\"url(#fuzzy)\"\r\n        />\r\n      </g>\r\n      <g\r\n        :transform=\"\r\n          'translate(' +\r\n          (center[0] + distanceBetweenEyes + rightEyeOffsetX) +\r\n          ' ' +\r\n          -(-center[1] + eyeHeightOffset + rightEyeOffsetY) +\r\n          ')'\r\n        \"\r\n      >\r\n        <polyline\r\n          id=\"rightUpper\"\r\n          :points=\"eyeRightUpper\"\r\n          fill=\"none\"\r\n          stroke=\"black\"\r\n          :stroke-width=\"(this.haventSleptForDays ? 5.0 : 3.0) / faceScale\"\r\n          stroke-linejoin=\"round\"\r\n          stroke-linecap=\"round\"\r\n          filter=\"url(#fuzzy)\"\r\n        />\r\n        <polyline\r\n          id=\"rightLower\"\r\n          :points=\"eyeRightLower\"\r\n          fill=\"none\"\r\n          stroke=\"black\"\r\n          :stroke-width=\"(this.haventSleptForDays ? 5.0 : 3.0) / faceScale\"\r\n          stroke-linejoin=\"round\"\r\n          stroke-linecap=\"round\"\r\n          filter=\"url(#fuzzy)\"\r\n        />\r\n        <circle\r\n          v-for=\"i in 10\"\r\n          :key=\"i\"\r\n          :r=\"Math.random() * 2 + 3.0\"\r\n          :cx=\"rightPupilShiftX + Math.random() * 5 - 2.5\"\r\n          :cy=\"rightPupilShiftY + Math.random() * 5 - 2.5\"\r\n          stroke=\"black\"\r\n          fill=\"none\"\r\n          :stroke-width=\"1.0 + Math.random() * 0.5\"\r\n          filter=\"url(#fuzzy)\"\r\n          clip-path=\"url(#rightEyeClipPath)\"\r\n        />\r\n      </g>\r\n      <g\r\n        :transform=\"\r\n          'translate(' +\r\n          -(center[0] + distanceBetweenEyes + leftEyeOffsetX) +\r\n          ' ' +\r\n          -(-center[1] + eyeHeightOffset + leftEyeOffsetY) +\r\n          ')'\r\n        \"\r\n      >\r\n        <polyline\r\n          id=\"leftUpper\"\r\n          :points=\"eyeLeftUpper\"\r\n          fill=\"none\"\r\n          stroke=\"black\"\r\n          :stroke-width=\"(this.haventSleptForDays ? 5.0 : 3.0) / faceScale\"\r\n          stroke-linejoin=\"round\"\r\n          filter=\"url(#fuzzy)\"\r\n        />\r\n        <polyline\r\n          id=\"leftLower\"\r\n          :points=\"eyeLeftLower\"\r\n          fill=\"none\"\r\n          stroke=\"black\"\r\n          :stroke-width=\"(this.haventSleptForDays ? 5.0 : 3.0) / faceScale\"\r\n          stroke-linejoin=\"round\"\r\n          filter=\"url(#fuzzy)\"\r\n        />\r\n        <circle\r\n          v-for=\"i in 10\"\r\n          :key=\"i\"\r\n          :r=\"Math.random() * 2 + 3.0\"\r\n          :cx=\"leftPupilShiftX + Math.random() * 5 - 2.5\"\r\n          :cy=\"leftPupilShiftY + Math.random() * 5 - 2.5\"\r\n          stroke=\"black\"\r\n          fill=\"none\"\r\n          :stroke-width=\"1.0 + Math.random() * 0.5\"\r\n          filter=\"url(#fuzzy)\"\r\n          clip-path=\"url(#leftEyeClipPath)\"\r\n        />\r\n      </g>\r\n      <g id=\"hairs\">\r\n        <polyline\r\n          v-for=\"(hair, index) in hairs\"\r\n          :key=\"index\"\r\n          :points=\"hair\"\r\n          fill=\"none\"\r\n          :stroke=\"hairColor\"\r\n          :stroke-width=\"0.5 + Math.random() * 2.5\"\r\n          stroke-linejoin=\"round\"\r\n          filter=\"url(#fuzzy)\"\r\n        />\r\n      </g>\r\n      <g id=\"pointNose\" v-if=\"Math.random() > 0.5\">\r\n        <g id=\"rightNose\">\r\n          <circle\r\n            v-for=\"i in 10\"\r\n            :key=\"i\"\r\n            :r=\"Math.random() * 2 + 1.0\"\r\n            :cx=\"rightNoseCenterX + Math.random() * 4 - 2\"\r\n            :cy=\"rightNoseCenterY + Math.random() * 4 - 2\"\r\n            stroke=\"black\"\r\n            fill=\"none\"\r\n            :stroke-width=\"1.0 + Math.random() * 0.5\"\r\n            filter=\"url(#fuzzy)\"\r\n          />\r\n        </g>\r\n        <g id=\"leftNose\">\r\n          <circle\r\n            v-for=\"i in 10\"\r\n            :key=\"i\"\r\n            :r=\"Math.random() * 2 + 1.0\"\r\n            :cx=\"leftNoseCenterX + Math.random() * 4 - 2\"\r\n            :cy=\"leftNoseCenterY + Math.random() * 4 - 2\"\r\n            stroke=\"black\"\r\n            fill=\"none\"\r\n            :stroke-width=\"1.0 + Math.random() * 0.5\"\r\n            filter=\"url(#fuzzy)\"\r\n          />\r\n        </g>\r\n      </g>\r\n      <g id=\"lineNose\" v-else>\r\n        <path\r\n          :d=\"\r\n            'M ' +\r\n            leftNoseCenterX +\r\n            ' ' +\r\n            leftNoseCenterY +\r\n            ', Q' +\r\n            rightNoseCenterX +\r\n            ' ' +\r\n            rightNoseCenterY * 1.5 +\r\n            ',' +\r\n            (leftNoseCenterX + rightNoseCenterX) / 2 +\r\n            ' ' +\r\n            -eyeHeightOffset * 0.2\r\n          \"\r\n          fill=\"none\"\r\n          stroke=\"black\"\r\n          :stroke-width=\"2.5 + Math.random() * 1.0\"\r\n          stroke-linejoin=\"round\"\r\n          filter=\"url(#fuzzy)\"\r\n        ></path>\r\n      </g>\r\n      <g id=\"mouth\">\r\n        <polyline\r\n          :points=\"mouthPoints\"\r\n          fill=\"rgb(215,127,140)\"\r\n          stroke=\"black\"\r\n          :stroke-width=\"2.7 + Math.random() * 0.5\"\r\n          stroke-linejoin=\"round\"\r\n          filter=\"url(#fuzzy)\"\r\n        />\r\n      </g>\r\n    </svg>\r\n    <button @click=\"generateFace\">ANOTHER</button>\r\n    <button @click=\"downloadSVGAsPNG\">DOWNLOAD</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as faceShape from \"../utils/face_shape.js\";\r\nimport * as eyeShape from \"../utils/eye_shape.js\";\r\nimport * as hairLines from \"../utils/hair_lines.js\";\r\nimport * as mouthShape from \"../utils/mouth_shape.js\";\r\n\r\nfunction randomFromInterval(min, max) {\r\n  // min and max included\r\n  return Math.random() * (max - min) + min;\r\n}\r\n\r\nexport default {\r\n  name: \"FaceGenerator\",\r\n  data() {\r\n    return {\r\n      faceScale: 1.8, // face scale\r\n      computedFacePoints: [], // the polygon points for face countour\r\n      eyeRightUpper: [], // the points for right eye upper lid\r\n      eyeRightLower: [],\r\n      eyeRightCountour: [], // for the white part of the eye\r\n      eyeLeftUpper: [],\r\n      eyeLeftLower: [],\r\n      eyeLeftCountour: [],\r\n      faceHeight: 0, // the height of the face\r\n      faceWidth: 0, // the width of the face\r\n      center: [0, 0], // the center of the face\r\n      distanceBetweenEyes: 0, // the distance between the eyes\r\n      leftEyeOffsetX: 0, // the offset of the left eye\r\n      leftEyeOffsetY: 0, // the offset of the left eye\r\n      rightEyeOffsetX: 0, // the offset of the right eye\r\n      rightEyeOffsetY: 0, // the offset of the right eye\r\n      eyeHeightOffset: 0, // the offset of the eye height\r\n      leftEyeCenter: [0, 0], // the center of the left eye\r\n      rightEyeCenter: [0, 0], // the center of the right eye\r\n      rightPupilShiftX: 0, // the shift of the right pupil\r\n      rightPupilShiftY: 0, // the shift of the right pupil\r\n      leftPupilShiftX: 0, // the shift of the left pupil\r\n      leftPupilShiftY: 0, // the shift of the left pupil\r\n      rightNoseCenterX: 0, // the center of the right nose\r\n      rightNoseCenterY: 0, // the center of the right nose\r\n      leftNoseCenterX: 0, // the center of the left nose\r\n      leftNoseCenterY: 0, // the center of the left nose\r\n      hairs: [],\r\n      haventSleptForDays: false,\r\n      hairColors: [\r\n        \"rgb(0, 0, 0)\", // Black\r\n        \"rgb(44, 34, 43)\", // Dark Brown\r\n        \"rgb(80, 68, 68)\", // Medium Brown\r\n        \"rgb(167, 133, 106)\", // Light Brown\r\n        \"rgb(220, 208, 186)\", // Blond\r\n        \"rgb(233, 236, 239)\", // Platinum Blond\r\n        \"rgb(165, 42, 42)\", // Red\r\n        \"rgb(145, 85, 61)\", // Auburn\r\n        \"rgb(128, 128, 128)\", // Grey\r\n        \"rgb(185, 55, 55)\", // Fire\r\n        \"rgb(255, 192, 203)\", // Pastel Pink\r\n        \"rgb(255, 105, 180)\", // Bright Pink\r\n        \"rgb(230, 230, 250)\", // Lavender\r\n        \"rgb(64, 224, 208)\", // Turquoise\r\n        \"rgb(0, 191, 255)\", // Bright Blue\r\n        \"rgb(148, 0, 211)\", // Deep Purple\r\n        \"rgb(50, 205, 50)\", // Lime Green\r\n        \"rgb(255, 165, 0)\", // Vivid Orange\r\n        \"rgb(220, 20, 60)\", // Crimson Red\r\n        \"rgb(192, 192, 192)\", // Silver\r\n        \"rgb(255, 215, 0)\", // Gold\r\n        \"rgb(255, 255, 255)\", // White\r\n        \"rgb(124, 252, 0)\", // Lawn Green\r\n        \"rgb(127, 255, 0)\", // Chartreuse\r\n        \"rgb(0, 255, 127)\", // Spring Green\r\n        \"rgb(72, 209, 204)\", // Medium Turquoise\r\n        \"rgb(0, 255, 255)\", // Cyan\r\n        \"rgb(0, 206, 209)\", // Dark Turquoise\r\n        \"rgb(32, 178, 170)\", // Light Sea Green\r\n        \"rgb(95, 158, 160)\", // Cadet Blue\r\n        \"rgb(70, 130, 180)\", // Steel Blue\r\n        \"rgb(176, 196, 222)\", // Light Steel Blue\r\n        \"rgb(30, 144, 255)\", // Dodger Blue\r\n        \"rgb(135, 206, 235)\", // Sky Blue\r\n        \"rgb(0, 0, 139)\", // Dark Blue\r\n        \"rgb(138, 43, 226)\", // Blue Violet\r\n        \"rgb(75, 0, 130)\", // Indigo\r\n        \"rgb(139, 0, 139)\", // Dark Magenta\r\n        \"rgb(153, 50, 204)\", // Dark Orchid\r\n        \"rgb(186, 85, 211)\", // Medium Orchid\r\n        \"rgb(218, 112, 214)\", // Orchid\r\n        \"rgb(221, 160, 221)\", // Plum\r\n        \"rgb(238, 130, 238)\", // Violet\r\n        \"rgb(255, 0, 255)\", // Magenta\r\n        \"rgb(216, 191, 216)\", // Thistle\r\n        \"rgb(255, 20, 147)\", // Deep Pink\r\n        \"rgb(255, 69, 0)\", // Orange Red\r\n        \"rgb(255, 140, 0)\", // Dark Orange\r\n        \"rgb(255, 165, 0)\", // Orange\r\n        \"rgb(250, 128, 114)\", // Salmon\r\n        \"rgb(233, 150, 122)\", // Dark Salmon\r\n        \"rgb(240, 128, 128)\", // Light Coral\r\n        \"rgb(205, 92, 92)\", // Indian Red\r\n        \"rgb(255, 99, 71)\", // Tomato\r\n        \"rgb(255, 160, 122)\", // Light Salmon\r\n        \"rgb(220, 20, 60)\", // Crimson\r\n        \"rgb(139, 0, 0)\", // Dark Red\r\n        \"rgb(178, 34, 34)\", // Fire Brick\r\n        \"rgb(250, 235, 215)\", // Antique White\r\n        \"rgb(255, 239, 213)\", // Papaya Whip\r\n        \"rgb(255, 235, 205)\", // Blanched Almond\r\n        \"rgb(255, 222, 173)\", // Navajo White\r\n        \"rgb(245, 245, 220)\", // Beige\r\n        \"rgb(255, 228, 196)\", // Bisque\r\n        \"rgb(255, 218, 185)\", // Peach Puff\r\n        \"rgb(244, 164, 96)\", // Sandy Brown\r\n        \"rgb(210, 180, 140)\", // Tan\r\n        \"rgb(222, 184, 135)\", // Burly Wood\r\n        \"rgb(250, 250, 210)\", // Light Goldenrod Yellow\r\n        \"rgb(255, 250, 205)\", // Lemon Chiffon\r\n        \"rgb(255, 245, 238)\", // Sea Shell\r\n        \"rgb(253, 245, 230)\", // Old Lace\r\n        \"rgb(255, 228, 225)\", // Misty Rose\r\n        \"rgb(255, 240, 245)\", // Lavender Blush\r\n        \"rgb(250, 240, 230)\", // Linen\r\n        \"rgb(255, 228, 181)\", // Moccasin\r\n        \"rgb(255, 250, 250)\", // Snow\r\n        \"rgb(240, 255, 255)\", // Azure\r\n        \"rgb(240, 255, 240)\", // Honeydew\r\n        \"rgb(245, 245, 245)\", // White Smoke\r\n        \"rgb(245, 255, 250)\", // Mint Cream\r\n        \"rgb(240, 248, 255)\", // Alice Blue\r\n        \"rgb(240, 248, 255)\", // Ghost White\r\n        \"rgb(248, 248, 255)\", // Ghost White\r\n        \"rgb(255, 250, 240)\", // Floral White\r\n        \"rgb(253, 245, 230)\", // Old Lace\r\n      ],\r\n\r\n      hairColor: \"black\",\r\n      dyeColorOffset: \"50%\",\r\n      backgroundColors: [\r\n        \"rgb(245, 245, 220)\", // Soft Beige\r\n        \"rgb(176, 224, 230)\", // Pale Blue\r\n        \"rgb(211, 211, 211)\", // Light Grey\r\n        \"rgb(152, 251, 152)\", // Pastel Green\r\n        \"rgb(255, 253, 208)\", // Cream\r\n        \"rgb(230, 230, 250)\", // Muted Lavender\r\n        \"rgb(188, 143, 143)\", // Dusty Rose\r\n        \"rgb(135, 206, 235)\", // Sky Blue\r\n        \"rgb(245, 255, 250)\", // Mint Cream\r\n        \"rgb(245, 222, 179)\", // Wheat\r\n        \"rgb(47, 79, 79)\", // Dark Slate Gray\r\n        \"rgb(72, 61, 139)\", // Dark Slate Blue\r\n        \"rgb(60, 20, 20)\", // Dark Brown\r\n        \"rgb(25, 25, 112)\", // Midnight Blue\r\n        \"rgb(139, 0, 0)\", // Dark Red\r\n        \"rgb(85, 107, 47)\", // Olive Drab\r\n        \"rgb(128, 0, 128)\", // Purple\r\n        \"rgb(0, 100, 0)\", // Dark Green\r\n        \"rgb(0, 0, 139)\", // Dark Blue\r\n        \"rgb(105, 105, 105)\", // Dim Gray\r\n        \"rgb(240, 128, 128)\", // Light Coral\r\n        \"rgb(255, 160, 122)\", // Light Salmon\r\n        \"rgb(255, 218, 185)\", // Peach Puff\r\n        \"rgb(255, 228, 196)\", // Bisque\r\n        \"rgb(255, 222, 173)\", // Navajo White\r\n        \"rgb(255, 250, 205)\", // Lemon Chiffon\r\n        \"rgb(250, 250, 210)\", // Light Goldenrod Yellow\r\n        \"rgb(255, 239, 213)\", // Papaya Whip\r\n        \"rgb(255, 245, 238)\", // Sea Shell\r\n        \"rgb(255, 248, 220)\", // Cornsilk\r\n        \"rgb(255, 255, 240)\", // Ivory\r\n        \"rgb(240, 255, 240)\", // Honeydew\r\n        \"rgb(240, 255, 255)\", // Azure\r\n        \"rgb(240, 248, 255)\", // Alice Blue\r\n        \"rgb(248, 248, 255)\", // Ghost White\r\n        \"rgb(255, 250, 250)\", // Snow\r\n        \"rgb(255, 240, 245)\", // Lavender Blush\r\n        \"rgb(255, 228, 225)\", // Misty Rose\r\n        \"rgb(230, 230, 250)\", // Lavender\r\n        \"rgb(216, 191, 216)\", // Thistle\r\n        \"rgb(221, 160, 221)\", // Plum\r\n        \"rgb(238, 130, 238)\", // Violet\r\n        \"rgb(218, 112, 214)\", // Orchid\r\n        \"rgb(186, 85, 211)\", // Medium Orchid\r\n        \"rgb(147, 112, 219)\", // Medium Purple\r\n        \"rgb(138, 43, 226)\", // Blue Violet\r\n        \"rgb(148, 0, 211)\", // Dark Violet\r\n        \"rgb(153, 50, 204)\", // Dark Orchid\r\n        \"rgb(139, 69, 19)\", // Saddle Brown\r\n        \"rgb(160, 82, 45)\", // Sienna\r\n        \"rgb(210, 105, 30)\", // Chocolate\r\n        \"rgb(205, 133, 63)\", // Peru\r\n        \"rgb(244, 164, 96)\", // Sandy Brown\r\n        \"rgb(222, 184, 135)\", // Burly Wood\r\n        \"rgb(255, 250, 240)\", // Floral White\r\n        \"rgb(253, 245, 230)\", // Old Lace\r\n        \"rgb(250, 240, 230)\", // Linen\r\n      ],\r\n      mouthPoints: [],\r\n    };\r\n  },\r\n  methods: {\r\n    generateFace() {\r\n      this.faceScale = 1.5 + Math.random() * 0.6;\r\n      this.haventSleptForDays = Math.random() > 0.8;\r\n      let faceResults = faceShape.generateFaceCountourPoints();\r\n      this.computedFacePoints = faceResults.face;\r\n      this.faceHeight = faceResults.height;\r\n      this.faceWidth = faceResults.width;\r\n      this.center = faceResults.center;\r\n      let eyes = eyeShape.generateBothEyes(this.faceWidth / 2);\r\n      let left = eyes.left;\r\n      let right = eyes.right;\r\n      this.eyeRightUpper = right.upper;\r\n      this.eyeRightLower = right.lower;\r\n      this.eyeRightCountour = right.upper\r\n        .slice(10, 90)\r\n        .concat(right.lower.slice(10, 90).reverse());\r\n      this.eyeLeftUpper = left.upper;\r\n      this.eyeLeftLower = left.lower;\r\n      this.eyeLeftCountour = left.upper\r\n        .slice(10, 90)\r\n        .concat(left.lower.slice(10, 90).reverse());\r\n      this.distanceBetweenEyes = randomFromInterval(\r\n        this.faceWidth / 4.5,\r\n        this.faceWidth / 4,\r\n      );\r\n      this.eyeHeightOffset = randomFromInterval(\r\n        this.faceHeight / 8,\r\n        this.faceHeight / 6,\r\n      );\r\n      this.leftEyeOffsetX = randomFromInterval(\r\n        -this.faceWidth / 20,\r\n        this.faceWidth / 10,\r\n      );\r\n      this.leftEyeOffsetY = randomFromInterval(\r\n        -this.faceHeight / 50,\r\n        this.faceHeight / 50,\r\n      );\r\n      this.rightEyeOffsetX = randomFromInterval(\r\n        -this.faceWidth / 20,\r\n        this.faceWidth / 10,\r\n      );\r\n      this.rightEyeOffsetY = randomFromInterval(\r\n        -this.faceHeight / 50,\r\n        this.faceHeight / 50,\r\n      );\r\n      this.leftEyeCenter = left.center[0];\r\n      this.rightEyeCenter = right.center[0];\r\n      this.leftPupilShiftX = randomFromInterval(\r\n        -this.faceWidth / 20,\r\n        this.faceWidth / 20,\r\n      );\r\n\r\n      // now we generate the pupil shifts\r\n      // we first pick a point from the upper eye lid\r\n      let leftInd0 = Math.floor(randomFromInterval(10, left.upper.length - 10));\r\n      let rightInd0 = Math.floor(\r\n        randomFromInterval(10, right.upper.length - 10),\r\n      );\r\n      let leftInd1 = Math.floor(randomFromInterval(10, left.upper.length - 10));\r\n      let rightInd1 = Math.floor(\r\n        randomFromInterval(10, right.upper.length - 10),\r\n      );\r\n      let leftLerp = randomFromInterval(0.2, 0.8);\r\n      let rightLerp = randomFromInterval(0.2, 0.8);\r\n\r\n      this.leftPupilShiftY =\r\n        left.upper[leftInd0][1] * leftLerp +\r\n        left.lower[leftInd1][1] * (1 - leftLerp);\r\n      this.rightPupilShiftY =\r\n        right.upper[rightInd0][1] * rightLerp +\r\n        right.lower[rightInd1][1] * (1 - rightLerp);\r\n      this.leftPupilShiftX =\r\n        left.upper[leftInd0][0] * leftLerp +\r\n        left.lower[leftInd1][0] * (1 - leftLerp);\r\n      this.rightPupilShiftX =\r\n        right.upper[rightInd0][0] * rightLerp +\r\n        right.lower[rightInd1][0] * (1 - rightLerp);\r\n\r\n      var numHairLines = [];\r\n      var numHairMethods = 4;\r\n      for (var i = 0; i < numHairMethods; i++) {\r\n        numHairLines.push(Math.floor(randomFromInterval(0, 50)));\r\n      }\r\n      this.hairs = [];\r\n      if (Math.random() > 0.3) {\r\n        this.hairs = hairLines.generateHairLines0(\r\n          this.computedFacePoints,\r\n          numHairLines[0] * 1 + 10,\r\n        );\r\n      }\r\n      if (Math.random() > 0.3) {\r\n        this.hairs = this.hairs.concat(\r\n          hairLines.generateHairLines1(\r\n            this.computedFacePoints,\r\n            numHairLines[1] / 1.5 + 10,\r\n          ),\r\n        );\r\n      }\r\n      if (Math.random() > 0.5) {\r\n        this.hairs = this.hairs.concat(\r\n          hairLines.generateHairLines2(\r\n            this.computedFacePoints,\r\n            numHairLines[2] * 3 + 10,\r\n          ),\r\n        );\r\n      }\r\n      if (Math.random() > 0.5) {\r\n        this.hairs = this.hairs.concat(\r\n          hairLines.generateHairLines3(\r\n            this.computedFacePoints,\r\n            numHairLines[3] * 3 + 10,\r\n          ),\r\n        );\r\n      }\r\n      this.rightNoseCenterX = randomFromInterval(\r\n        this.faceWidth / 18,\r\n        this.faceWidth / 12,\r\n      );\r\n      this.rightNoseCenterY = randomFromInterval(0, this.faceHeight / 5);\r\n      this.leftNoseCenterX = randomFromInterval(\r\n        -this.faceWidth / 18,\r\n        -this.faceWidth / 12,\r\n      );\r\n      this.leftNoseCenterY =\r\n        this.rightNoseCenterY +\r\n        randomFromInterval(-this.faceHeight / 30, this.faceHeight / 20);\r\n      if (Math.random() > 0.1) {\r\n        // use natural hair color\r\n        this.hairColor = this.hairColors[Math.floor(Math.random() * 10)];\r\n      } else {\r\n        this.hairColor = \"url(#rainbowGradient)\";\r\n        this.dyeColorOffset = randomFromInterval(0, 100) + \"%\";\r\n      }\r\n\r\n      var choice = Math.floor(Math.random() * 3);\r\n      if (choice == 0) {\r\n        this.mouthPoints = mouthShape.generateMouthShape0(\r\n          this.computedFacePoints,\r\n          this.faceHeight,\r\n          this.faceWidth,\r\n        );\r\n      } else if (choice == 1) {\r\n        this.mouthPoints = mouthShape.generateMouthShape1(\r\n          this.computedFacePoints,\r\n          this.faceHeight,\r\n          this.faceWidth,\r\n        );\r\n      } else {\r\n        this.mouthPoints = mouthShape.generateMouthShape2(\r\n          this.computedFacePoints,\r\n          this.faceHeight,\r\n          this.faceWidth,\r\n        );\r\n      }\r\n    },\r\n    downloadSVGAsPNG() {\r\n      // download our svg as png\r\n      const svg = document.getElementById(\"face-svg\");\r\n      const svgData = new XMLSerializer().serializeToString(svg);\r\n      const canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const img = document.createElement(\"img\");\r\n      const svgSize = svg.getBoundingClientRect();\r\n      canvas.width = svgSize.width;\r\n      canvas.height = svgSize.height;\r\n      img.setAttribute(\"src\", \"data:image/svg+xml;base64,\" + btoa(svgData));\r\n      img.onload = function () {\r\n        ctx.drawImage(img, 0, 0);\r\n        const a = document.createElement(\"a\");\r\n        const e = new MouseEvent(\"click\");\r\n        a.download = \"face.png\";\r\n        a.href = canvas.toDataURL(\"image/png\");\r\n        a.dispatchEvent(e);\r\n      };\r\n    },\r\n  },\r\n  mounted() {\r\n    this.generateFace();\r\n    // add key binding\r\n    window.addEventListener(\"keydown\", (e) => {\r\n      if (e.key === \" \") {\r\n        this.generateFace();\r\n        // this.downloadSVGAsPNG();\r\n      } else if (e.key === \"s\") {\r\n        this.downloadSVGAsPNG();\r\n      }\r\n    });\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: inline-flex;\r\n  /* align-items items in column */\r\n  flex-direction: column;\r\n  /* center items horizontally */\r\n  align-items: center;\r\n  /* center items vertically */\r\n  justify-content: center;\r\n  background-color: #ffffff;\r\n  padding: 5px;\r\n}\r\nsvg {\r\n  background-color: #ffffff;\r\n}\r\nbutton {\r\n  margin-top: 10px;\r\n  width: 200px;\r\n  padding: 5px;\r\n  background: transparent;\r\n  border-width: 2px;\r\n  font-size: 15px;\r\n  border-color: black;\r\n  color: black;\r\n  font-weight: bold;\r\n  user-select: none;\r\n  border-radius: 10px;\r\n  box-shadow: 2px 2px 0px 0px rgba(0, 0, 0, 0.75);\r\n}\r\n\r\nbutton:hover {\r\n  background: black;\r\n  color: white;\r\n  transition: 0.3s;\r\n}\r\nbutton:active {\r\n  background: rgb(65, 65, 65);\r\n  box-shadow: 1px 1px 0px 0px rgba(0, 0, 0, 0.75);\r\n}\r\n</style>\r\n","function randomFromInterval(min, max) {\r\n  // min and max included\r\n  return Math.random() * (max - min) + min;\r\n}\r\nexport function getEggShapePoints(a, b, k, segment_points) {\r\n  // the function is x^2/a^2 * (1 + ky) + y^2/b^2 = 1\r\n  var result = [];\r\n  //   var pointString = \"\";\r\n  for (var i = 0; i < segment_points; i++) {\r\n    // x positive, y positive\r\n    // first compute the degree\r\n    var degree =\r\n      (Math.PI / 2 / segment_points) * i +\r\n      randomFromInterval(\r\n        -Math.PI / 1.1 / segment_points,\r\n        Math.PI / 1.1 / segment_points,\r\n      );\r\n    var y = Math.sin(degree) * b;\r\n    var x =\r\n      Math.sqrt(((1 - (y * y) / (b * b)) / (1 + k * y)) * a * a) +\r\n      randomFromInterval(-a / 200.0, a / 200.0);\r\n    // pointString += x + \",\" + y + \" \";\r\n    result.push([x, y]);\r\n  }\r\n  for (var i = segment_points; i > 0; i--) {\r\n    // x is negative, y is positive\r\n    var degree =\r\n      (Math.PI / 2 / segment_points) * i +\r\n      randomFromInterval(\r\n        -Math.PI / 1.1 / segment_points,\r\n        Math.PI / 1.1 / segment_points,\r\n      );\r\n    var y = Math.sin(degree) * b;\r\n    var x =\r\n      -Math.sqrt(((1 - (y * y) / (b * b)) / (1 + k * y)) * a * a) +\r\n      randomFromInterval(-a / 200.0, a / 200.0);\r\n    // pointString += x + \",\" + y + \" \";\r\n    result.push([x, y]);\r\n  }\r\n  for (var i = 0; i < segment_points; i++) {\r\n    // x is negative, y is negative\r\n    var degree =\r\n      (Math.PI / 2 / segment_points) * i +\r\n      randomFromInterval(\r\n        -Math.PI / 1.1 / segment_points,\r\n        Math.PI / 1.1 / segment_points,\r\n      );\r\n    var y = -Math.sin(degree) * b;\r\n    var x =\r\n      -Math.sqrt(((1 - (y * y) / (b * b)) / (1 + k * y)) * a * a) +\r\n      randomFromInterval(-a / 200.0, a / 200.0);\r\n    // pointString += x + \",\" + y + \" \";\r\n    result.push([x, y]);\r\n  }\r\n  for (var i = segment_points; i > 0; i--) {\r\n    // x is positive, y is negative\r\n    var degree =\r\n      (Math.PI / 2 / segment_points) * i +\r\n      randomFromInterval(\r\n        -Math.PI / 1.1 / segment_points,\r\n        Math.PI / 1.1 / segment_points,\r\n      );\r\n    var y = -Math.sin(degree) * b;\r\n    var x =\r\n      Math.sqrt(((1 - (y * y) / (b * b)) / (1 + k * y)) * a * a) +\r\n      randomFromInterval(-a / 200.0, a / 200.0);\r\n    // pointString += x + \",\" + y + \" \";\r\n    result.push([x, y]);\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction findIntersectionPoints(radian, a, b) {\r\n  if (radian < 0) {\r\n    radian = 0;\r\n  }\r\n  if (radian > Math.PI / 2) {\r\n    radian = Math.PI / 2;\r\n  }\r\n  // a is width, b is height\r\n  // Slope of the line\r\n  const m = Math.tan(radian);\r\n  // check if radian is close to 90 degrees\r\n  if (Math.abs(radian - Math.PI / 2) < 0.0001) {\r\n    return { x: 0, y: b };\r\n  }\r\n  // only checks the first quadrant\r\n  const y = m * a;\r\n  if (y < b) {\r\n    // it intersects with the left side\r\n    return { x: a, y: y };\r\n  } else {\r\n    // it intersects with the top side\r\n    // console.log(m);\r\n    const x = b / m;\r\n    // console.log(x, b);\r\n    return { x: x, y: b };\r\n  }\r\n}\r\n\r\nexport function generateRectangularFaceContourPoints(a, b, segment_points) {\r\n  // a is width, b is height, segment_points is the number of points\r\n\r\n  var result = [];\r\n  for (var i = 0; i < segment_points; i++) {\r\n    var degree =\r\n      (Math.PI / 2 / segment_points) * i +\r\n      randomFromInterval(\r\n        -Math.PI / 11 / segment_points,\r\n        Math.PI / 11 / segment_points,\r\n      );\r\n    var intersection = findIntersectionPoints(degree, a, b);\r\n    result.push([intersection.x, intersection.y]);\r\n  }\r\n  for (var i = segment_points; i > 0; i--) {\r\n    // x is negative, y is positive\r\n    var degree =\r\n      (Math.PI / 2 / segment_points) * i +\r\n      randomFromInterval(\r\n        -Math.PI / 11 / segment_points,\r\n        Math.PI / 11 / segment_points,\r\n      );\r\n    var intersection = findIntersectionPoints(degree, a, b);\r\n    result.push([-intersection.x, intersection.y]);\r\n  }\r\n  for (var i = 0; i < segment_points; i++) {\r\n    // x is negative, y is negative\r\n    // first compute the degree\r\n    var degree =\r\n      (Math.PI / 2 / segment_points) * i +\r\n      randomFromInterval(\r\n        -Math.PI / 11 / segment_points,\r\n        Math.PI / 11 / segment_points,\r\n      );\r\n    var intersection = findIntersectionPoints(degree, a, b);\r\n    result.push([-intersection.x, -intersection.y]);\r\n  }\r\n  for (var i = segment_points; i > 0; i--) {\r\n    // x is positive, y is negative\r\n    // first compute the degree\r\n    var degree =\r\n      (Math.PI / 2 / segment_points) * i +\r\n      randomFromInterval(\r\n        -Math.PI / 11 / segment_points,\r\n        Math.PI / 11 / segment_points,\r\n      );\r\n    var intersection = findIntersectionPoints(degree, a, b);\r\n    result.push([intersection.x, -intersection.y]);\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function generateFaceCountourPoints(numPoints = 100) {\r\n  var faceSizeX0 = randomFromInterval(50, 100);\r\n  var faceSizeY0 = randomFromInterval(70, 100);\r\n\r\n  var faceSizeY1 = randomFromInterval(50, 80);\r\n  var faceSizeX1 = randomFromInterval(70, 100);\r\n  var faceK0 =\r\n    randomFromInterval(0.001, 0.005) * (Math.random() > 0.5 ? 1 : -1);\r\n  var faceK1 =\r\n    randomFromInterval(0.001, 0.005) * (Math.random() > 0.5 ? 1 : -1);\r\n  var face0TranslateX = randomFromInterval(-5, 5);\r\n  var face0TranslateY = randomFromInterval(-15, 15);\r\n\r\n  var face1TranslateY = randomFromInterval(-5, 5);\r\n  var face1TranslateX = randomFromInterval(-5, 25);\r\n  var eggOrRect0 = Math.random() > 0.1;\r\n  var eggOrRect1 = Math.random() > 0.3;\r\n\r\n  var results0 = eggOrRect0\r\n    ? getEggShapePoints(faceSizeX0, faceSizeY0, faceK0, numPoints)\r\n    : generateRectangularFaceContourPoints(faceSizeX0, faceSizeY0, numPoints);\r\n  var results1 = eggOrRect1\r\n    ? getEggShapePoints(faceSizeX1, faceSizeY1, faceK1, numPoints)\r\n    : generateRectangularFaceContourPoints(faceSizeX1, faceSizeY1, numPoints);\r\n  for (var i = 0; i < results0.length; i++) {\r\n    results0[i][0] += face0TranslateX;\r\n    results0[i][1] += face0TranslateY;\r\n    results1[i][0] += face1TranslateX;\r\n    results1[i][1] += face1TranslateY;\r\n  }\r\n  var results = [];\r\n  let center = [0, 0];\r\n  for (var i = 0; i < results0.length; i++) {\r\n    results.push([\r\n      results0[i][0] * 0.7 +\r\n        results1[(i + results0.length / 4) % results0.length][1] * 0.3,\r\n      results0[i][1] * 0.7 -\r\n        results1[(i + results0.length / 4) % results0.length][0] * 0.3,\r\n    ]);\r\n    center[0] += results[i][0];\r\n    center[1] += results[i][1];\r\n  }\r\n  center[0] /= results.length;\r\n  center[1] /= results.length;\r\n  // center the face\r\n  for (var i = 0; i < results.length; i++) {\r\n    results[i][0] -= center[0];\r\n    results[i][1] -= center[1];\r\n  }\r\n\r\n  let width = results[0][0] - results[results.length / 2][0];\r\n  let height =\r\n    results[results.length / 4][1] - results[(results.length * 3) / 4][1];\r\n  // add the first point to the end to close the shape\r\n  results.push(results[0]);\r\n  results.push(results[1]);\r\n  // console.log(results);\r\n  return { face: results, width: width, height: height, center: [0, 0] };\r\n}\r\n","function randomFromInterval(min, max) {\r\n    // min and max included\r\n    return Math.random() * (max - min) + min;\r\n}\r\n\r\nfunction cubicBezier(P0, P1, P2, P3, t) {\r\n    var x = (1 - t) ** 3 * P0[0] + 3 * (1 - t) ** 2 * t * P1[0] + 3 * (1 - t) * t ** 2 * P2[0] + t ** 3 * P3[0];\r\n    var y = (1 - t) ** 3 * P0[1] + 3 * (1 - t) ** 2 * t * P1[1] + 3 * (1 - t) * t ** 2 * P2[1] + t ** 3 * P3[1];\r\n    return [x, y];\r\n}\r\n\r\nfunction generateEyeParameters(width) {\r\n    let height_upper = Math.random() * width / 1.2;// Less height for the upper eyelid to make it sharper\r\n    let height_lower = Math.random() * width / 1.2;// More height for the lower eyelid to make it rounder and droopier\r\n    let P0_upper_randX = Math.random() * 0.4 - 0.2;\r\n    let P3_upper_randX = Math.random() * 0.4 - 0.2;\r\n    let P0_upper_randY = Math.random() * 0.4 - 0.2;\r\n    let P3_upper_randY = Math.random() * 0.4 - 0.2;\r\n    let offset_upper_left_randY = Math.random();\r\n    let offset_upper_right_randY = Math.random();\r\n    let P0_upper = [-width / 2 + P0_upper_randX * width / 16, P0_upper_randY * height_upper / 16];\r\n    let P3_upper = [width / 2 + P3_upper_randX * width / 16, P3_upper_randY * height_upper / 16];\r\n    let P0_lower = P0_upper;// Starting at the same point as the upper eyelid\r\n    let P3_lower = P3_upper;// Ending at the same point as the upper eyelid\r\n    let eye_true_width = P3_upper[0] - P0_upper[0];\r\n\r\n    let offset_upper_left_x = randomFromInterval(-eye_true_width / 10.0, eye_true_width / 2.3);// Upper eyelid control point offset to create asymmetry\r\n    let offset_upper_right_x = randomFromInterval(-eye_true_width / 10.0, eye_true_width / 2.3);// Upper eyelid control point offset to create asymmetry\r\n    let offset_upper_left_y = offset_upper_left_randY * height_upper;// Upper eyelid control point offset to create asymmetry\r\n    let offset_upper_right_y = offset_upper_right_randY * height_upper;// Upper eyelid control point offset to create asymmetry\r\n    let offset_lower_left_x = randomFromInterval(offset_upper_left_x, eye_true_width / 2.1);// Lower eyelid control point offset\r\n    let offset_lower_right_x = randomFromInterval(offset_upper_right_x, eye_true_width / 2.1);// Upper eyelid control point offset to create asymmetry\r\n    let offset_lower_left_y = randomFromInterval(-offset_upper_left_y + 5, height_lower);// Upper eyelid control point offset to create asymmetry\r\n    let offset_lower_right_y = randomFromInterval(-offset_upper_right_y + 5, height_lower);// Upper eyelid control point offset to create asymmetry\r\n    // Generate points for the Bezier curves\r\n    let left_converge0 = Math.random();\r\n    let right_converge0 = Math.random();\r\n    // Generate points for the Bezier curves\r\n    let left_converge1 = Math.random();\r\n    let right_converge1 = Math.random();\r\n    return {\r\n        height_upper: height_upper,\r\n        height_lower: height_lower,\r\n        P0_upper_randX: P0_upper_randX,\r\n        P3_upper_randX: P3_upper_randX,\r\n        P0_upper_randY: P0_upper_randY,\r\n        P3_upper_randY: P3_upper_randY,\r\n        offset_upper_left_randY: offset_upper_left_randY,\r\n        offset_upper_right_randY: offset_upper_right_randY,\r\n        eye_true_width: eye_true_width,\r\n        offset_upper_left_x: offset_upper_left_x,\r\n        offset_upper_right_x: offset_upper_right_x,\r\n        offset_upper_left_y: offset_upper_left_y,\r\n        offset_upper_right_y: offset_upper_right_y,\r\n        offset_lower_left_x: offset_lower_left_x,\r\n        offset_lower_right_x: offset_lower_right_x,\r\n        offset_lower_left_y: offset_lower_left_y,\r\n        offset_lower_right_y: offset_lower_right_y,\r\n        left_converge0: left_converge0,\r\n        right_converge0: right_converge0,\r\n        left_converge1: left_converge1,\r\n        right_converge1: right_converge1\r\n    }\r\n}\r\n\r\nexport function generateEyePoints(rands, width = 50) {\r\n\r\n    let P0_upper = [-width / 2 + rands.P0_upper_randX * width / 16, rands.P0_upper_randY * rands.height_upper / 16];\r\n    let P3_upper = [width / 2 + rands.P3_upper_randX * width / 16, rands.P3_upper_randY * rands.height_upper / 16];\r\n    let P0_lower = P0_upper;// Starting at the same point as the upper eyelid\r\n    let P3_lower = P3_upper;// Ending at the same point as the upper eyelid\r\n    let eye_true_width = P3_upper[0] - P0_upper[0];\r\n\r\n    // Upper eyelid control points\r\n    let P1_upper = [P0_upper[0] + rands.offset_upper_left_x, P0_upper[1] + rands.offset_upper_left_y];  // First control point\r\n    let P2_upper = [P3_upper[0] - rands.offset_upper_right_x, P3_upper[1] + rands.offset_upper_right_y];  // Second control point\r\n\r\n\r\n    // Lower eyelid control points\r\n    let P1_lower = [P0_lower[0] + rands.offset_lower_left_x, P0_lower[1] - rands.offset_lower_left_y];  // First control point\r\n    let P2_lower = [P3_lower[0] - rands.offset_lower_right_x, P3_lower[1] - rands.offset_lower_right_y];  // Second control point\r\n\r\n    // now we generate the points for the upper eyelid\r\n    let upper_eyelid_points = [];\r\n    let upper_eyelid_points_left_control = [];\r\n    let upper_eyelid_points_right_control = [];\r\n    let upper_eyelid_left_control_point = [P0_upper[0] * (1 - rands.left_converge0) + P1_lower[0] * rands.left_converge0, P0_upper[1] * (1 - rands.left_converge0) + P1_lower[1] * rands.left_converge0];\r\n    let upper_eyelid_right_control_point = [P3_upper[0] * (1 - rands.right_converge0) + P2_lower[0] * rands.right_converge0, P3_upper[1] * (1 - rands.right_converge0) + P2_lower[1] * rands.right_converge0];\r\n    for (let t = 0; t < 100; t++) {\r\n        upper_eyelid_points.push(cubicBezier(P0_upper, P1_upper, P2_upper, P3_upper, t / 100));\r\n        upper_eyelid_points_left_control.push(cubicBezier(upper_eyelid_left_control_point, P0_upper, P1_upper, P2_upper, t / 100));\r\n        upper_eyelid_points_right_control.push(cubicBezier(P1_upper, P2_upper, P3_upper, upper_eyelid_right_control_point, t / 100));\r\n    }\r\n\r\n    for (let i = 0; i < 75; i++) {\r\n        let weight = ((75.0 - i) / 75.0) ** 2\r\n        upper_eyelid_points[i] = [upper_eyelid_points[i][0] * (1 - weight) + upper_eyelid_points_left_control[i + 25][0] * weight, upper_eyelid_points[i][1] * (1 - weight) + upper_eyelid_points_left_control[i + 25][1] * weight]\r\n        upper_eyelid_points[i + 25] = [upper_eyelid_points[i + 25][0] * weight + upper_eyelid_points_right_control[i][0] * (1 - weight), upper_eyelid_points[i + 25][1] * weight + upper_eyelid_points_right_control[i][1] * (1 - weight)]\r\n    }\r\n\r\n\r\n    // now we generate the points for the upper eyelid\r\n    let lower_eyelid_points = [];\r\n    let lower_eyelid_points_left_control = [];\r\n    let lower_eyelid_points_right_control = [];\r\n    let lower_eyelid_left_control_point = [P0_lower[0] * (1 - rands.left_converge0) + P1_upper[0] * rands.left_converge0, P0_lower[1] * (1 - rands.left_converge0) + P1_upper[1] * rands.left_converge0];\r\n    let lower_eyelid_right_control_point = [P3_lower[0] * (1 - rands.right_converge1) + P2_upper[0] * rands.right_converge1, P3_lower[1] * (1 - rands.right_converge1) + P2_upper[1] * rands.right_converge1];\r\n    for (let t = 0; t < 100; t++) {\r\n        lower_eyelid_points.push(cubicBezier(P0_lower, P1_lower, P2_lower, P3_lower, t / 100));\r\n        lower_eyelid_points_left_control.push(cubicBezier(lower_eyelid_left_control_point, P0_lower, P1_lower, P2_lower, t / 100));\r\n        lower_eyelid_points_right_control.push(cubicBezier(P1_lower, P2_lower, P3_lower, lower_eyelid_right_control_point, t / 100));\r\n    }\r\n\r\n    for (let i = 0; i < 75; i++) {\r\n        let weight = ((75.0 - i) / 75.0) ** 2\r\n        lower_eyelid_points[i] = [lower_eyelid_points[i][0] * (1 - weight) + lower_eyelid_points_left_control[i + 25][0] * weight, lower_eyelid_points[i][1] * (1 - weight) + lower_eyelid_points_left_control[i + 25][1] * weight]\r\n        lower_eyelid_points[i + 25] = [lower_eyelid_points[i + 25][0] * weight + lower_eyelid_points_right_control[i][0] * (1 - weight), lower_eyelid_points[i + 25][1] * weight + lower_eyelid_points_right_control[i][1] * (1 - weight)]\r\n    }\r\n    for (let i = 0; i < 100; i++) {\r\n        lower_eyelid_points[i][1] = -lower_eyelid_points[i][1]\r\n        upper_eyelid_points[i][1] = -upper_eyelid_points[i][1]\r\n    }\r\n\r\n    let eyeCenter = [upper_eyelid_points[50][0] / 2.0 + lower_eyelid_points[50][0] / 2.0, upper_eyelid_points[50][1] / 2.0 + lower_eyelid_points[50][1] / 2.0];\r\n\r\n    for (let i = 0; i < 100; i++) {\r\n        // translate to center\r\n        lower_eyelid_points[i][0] -= eyeCenter[0]\r\n        lower_eyelid_points[i][1] -= eyeCenter[1]\r\n        upper_eyelid_points[i][0] -= eyeCenter[0]\r\n        upper_eyelid_points[i][1] -= eyeCenter[1]\r\n    }\r\n    eyeCenter = [0, 0];\r\n\r\n    // we switch the upper and lower eyelid points because in svg the bottom is y+ and top is y-\r\n    return { upper: upper_eyelid_points, lower: lower_eyelid_points, center: [eyeCenter]}\r\n}\r\n\r\nexport function generateBothEyes(width = 50) {\r\n    let rands_left = generateEyeParameters(width)\r\n    // Create a shallow copy of the object\r\n    let rands_right = { ...rands_left };\r\n\r\n    // Iterate over the object's keys\r\n    for (let key in rands_right) {\r\n        // Check if the property value is a number\r\n        if (typeof rands_right[key] === 'number') {\r\n            // Add a random value to the number, for example, between -5 and 5\r\n            rands_right[key] += randomFromInterval(-rands_right[key] / 2.0, rands_right[key] / 2.0);\r\n        }\r\n    }\r\n    let left_eye = generateEyePoints(rands_left, width)\r\n    let right_eye = generateEyePoints(rands_right, width)\r\n\r\n    for (let key in left_eye) {\r\n        if (typeof left_eye[key] === 'object') {\r\n            for (let i = 0; i < left_eye[key].length; i++) {\r\n                left_eye[key][i][0] = -left_eye[key][i][0]\r\n            }\r\n        }\r\n    }\r\n    return { left: left_eye, right: right_eye }\r\n}","function randomFromInterval(min, max) {\r\n  // min and max included\r\n  return Math.random() * (max - min) + min;\r\n}\r\nfunction factorial(n) {\r\n  if (n <= 1) return 1;\r\n  return n * factorial(n - 1);\r\n}\r\n\r\nfunction binomialCoefficient(n, k) {\r\n  return factorial(n) / (factorial(k) * factorial(n - k));\r\n}\r\n\r\nfunction calculateBezierPoint(t, controlPoints) {\r\n  let x = 0, y = 0;\r\n  const n = controlPoints.length - 1;\r\n\r\n  for (let i = 0; i <= n; i++) {\r\n      let binCoeff = binomialCoefficient(n, i);\r\n      let a = Math.pow(1 - t, n - i);\r\n      let b = Math.pow(t, i);\r\n      x += binCoeff * a * b * controlPoints[i].x;\r\n      y += binCoeff * a * b * controlPoints[i].y;\r\n  }\r\n\r\n  return [x, y];\r\n}\r\n\r\nfunction computeBezierCurve(controlPoints, numberOfPoints) {\r\n  let curve = [];\r\n  for (let i = 0; i <= numberOfPoints; i++) {\r\n      let t = i / numberOfPoints;\r\n      let point = calculateBezierPoint(t, controlPoints);\r\n      curve.push(point);\r\n  }\r\n  return curve;\r\n}\r\n\r\nexport function generateHairLines0(faceCountour, numHairLines = 100) {\r\n  var faceCountourCopy = faceCountour.slice(0, faceCountour.length - 2);\r\n  var results = [];\r\n  for (var i = 0; i < numHairLines; i++){\r\n    var numHairPoints = 20 + Math.floor(randomFromInterval(-5, 5));\r\n    // we generate some hair lines\r\n    var hair_line = [];\r\n    var index_offset = Math.floor(randomFromInterval(30, 140));\r\n    for (var j = 0; j < numHairPoints; j++){\r\n      hair_line.push({x: faceCountourCopy[(faceCountourCopy.length - (j + index_offset)) % faceCountourCopy.length][0], y:faceCountourCopy[(faceCountourCopy.length - (j + index_offset)) % faceCountourCopy.length][1]});\r\n    }\r\n    var d0 = computeBezierCurve(hair_line, numHairPoints);\r\n    hair_line = []\r\n    index_offset = Math.floor(randomFromInterval(30, 140));\r\n    for (var j = 0; j < numHairPoints; j++){\r\n      hair_line.push({x: faceCountourCopy[(faceCountourCopy.length - (-j + index_offset)) % faceCountourCopy.length][0], y:faceCountourCopy[(faceCountourCopy.length - (-j + index_offset)) % faceCountourCopy.length][1]});\r\n    }\r\n    var d1 = computeBezierCurve(hair_line, numHairPoints);\r\n    var d = [];\r\n    for (var j = 0; j < numHairPoints; j++){\r\n      d.push([d0[j][0] * (j * (1 / numHairPoints)) ** 2 + d1[j][0] * (1 - (j * (1 / numHairPoints)) ** 2), d0[j][1] * (j * (1 / numHairPoints)) ** 2 + d1[j][1] * (1 - (j * (1 / numHairPoints)) ** 2)]);\r\n    }\r\n\r\n    results.push(d);\r\n  }\r\n  return results;\r\n}\r\nexport function generateHairLines1(faceCountour, numHairLines = 100) {\r\n  var faceCountourCopy = faceCountour.slice(0, faceCountour.length - 2);\r\n  var results = [];\r\n  for (var i = 0; i < numHairLines; i++){\r\n    var numHairPoints = 20 + Math.floor(randomFromInterval(-5, 5));\r\n    // we generate some hair lines\r\n    var hair_line = [];\r\n    var index_start = Math.floor(randomFromInterval(20, 160));\r\n    hair_line.push({x: faceCountourCopy[(faceCountourCopy.length - index_start) % faceCountourCopy.length][0], y:faceCountourCopy[(faceCountourCopy.length - index_start) % faceCountourCopy.length][1]});\r\n\r\n    for (var j = 1; j < numHairPoints + 1; j++){\r\n      index_start = Math.floor(randomFromInterval(20, 160));\r\n      hair_line.push({x: faceCountourCopy[(faceCountourCopy.length - index_start) % faceCountourCopy.length][0], y:faceCountourCopy[(faceCountourCopy.length - index_start) % faceCountourCopy.length][1]});\r\n    }\r\n    var d = computeBezierCurve(hair_line, numHairPoints);\r\n    \r\n    results.push(d);\r\n  }\r\n  return results;\r\n}\r\n\r\n\r\nexport function generateHairLines2(faceCountour, numHairLines = 100) {\r\n  \r\n  var faceCountourCopy = faceCountour.slice(0, faceCountour.length - 2);\r\n  var results = [];\r\n  var pickedIndices = [];\r\n  for (var i = 0; i < numHairLines; i++){\r\n    pickedIndices.push(Math.floor(randomFromInterval(10, 180)));\r\n  }\r\n  pickedIndices.sort();\r\n  for (var i = 0; i < numHairLines; i++){\r\n    var numHairPoints = 20 + Math.floor(randomFromInterval(-5, 5));\r\n    // we generate some hair lines\r\n    var hair_line = [];\r\n    var index_offset = pickedIndices[i];\r\n    var lower = randomFromInterval(0.8 , 1.4);\r\n    var reverse = Math.random() > 0.5 ? 1 : -1;\r\n    for (var j = 0; j < numHairPoints; j++){\r\n      var powerscale = randomFromInterval(0.1, 3);\r\n      var portion = (1 - (j / numHairPoints) ** powerscale) * (1 - lower) + lower;\r\n      hair_line.push({x: faceCountourCopy[(faceCountourCopy.length - (reverse * j + index_offset)) % faceCountourCopy.length][0] * portion, y:faceCountourCopy[(faceCountourCopy.length - (reverse * j + index_offset)) % faceCountourCopy.length][1] * portion});\r\n    }\r\n    var d = computeBezierCurve(hair_line, numHairPoints);\r\n    if (Math.random() > 0.7) d = d.reverse();\r\n    if (results.length == 0){\r\n      results.push(d);\r\n      continue;\r\n    }\r\n    var lastHairPoint = results[results.length - 1][results[results.length - 1].length - 1];\r\n    var lastPointsDistance = Math.sqrt((d[0][0] - lastHairPoint[0]) ** 2 + (d[0][1] - lastHairPoint[1]) ** 2);\r\n    if (Math.random() > 0.5 && lastPointsDistance < 100){\r\n      results[results.length - 1] = results[results.length - 1].concat(d);\r\n    }else{\r\n      results.push(d);\r\n    }\r\n  }\r\n  return results;\r\n}\r\n\r\nexport function generateHairLines3(faceCountour, numHairLines = 100) {\r\n  var faceCountourCopy = faceCountour.slice(0, faceCountour.length - 2);\r\n  var results = [];\r\n  var pickedIndices = [];\r\n  for (var i = 0; i < numHairLines; i++){\r\n    pickedIndices.push(Math.floor(randomFromInterval(10, 180)));\r\n  }\r\n  pickedIndices.sort();\r\n  var splitPoint = Math.floor(randomFromInterval(0, 200));\r\n  for (var i = 0; i < numHairLines; i++){\r\n    var numHairPoints = 30 + Math.floor(randomFromInterval(-8, 8));\r\n    // we generate some hair lines\r\n    var hair_line = [];\r\n    var index_offset = pickedIndices[i];\r\n    var lower = randomFromInterval(1 , 2.3);\r\n    if (Math.random() > 0.9) lower = randomFromInterval(0 , 1.);\r\n    var reverse = index_offset > splitPoint ? 1 : -1;\r\n    for (var j = 0; j < numHairPoints; j++){\r\n      var powerscale = randomFromInterval(0.1, 3);\r\n      var portion = (1 - (j / (numHairPoints)) ** powerscale) * (1 - lower) + lower;\r\n      hair_line.push({x: faceCountourCopy[(faceCountourCopy.length - (reverse * j * 2 + index_offset)) % faceCountourCopy.length][0] * portion, y:faceCountourCopy[(faceCountourCopy.length - (reverse * j * 2 + index_offset)) % faceCountourCopy.length][1]});\r\n    }\r\n    var d = computeBezierCurve(hair_line, numHairPoints);\r\n    results.push(d);\r\n  }\r\n  return results;\r\n}","function randomFromInterval(min, max) {\r\n    // min and max included\r\n    return Math.random() * (max - min) + min;\r\n}\r\nfunction cubicBezier(P0, P1, P2, P3, t) {\r\n    var x = (1 - t) ** 3 * P0[0] + 3 * (1 - t) ** 2 * t * P1[0] + 3 * (1 - t) * t ** 2 * P2[0] + t ** 3 * P3[0];\r\n    var y = (1 - t) ** 3 * P0[1] + 3 * (1 - t) ** 2 * t * P1[1] + 3 * (1 - t) * t ** 2 * P2[1] + t ** 3 * P3[1];\r\n    return [x, y];\r\n}\r\nfunction getEggShapePoints(a, b, k, segment_points) {\r\n    // the function is x^2/a^2 * (1 + ky) + y^2/b^2 = 1\r\n    var result = [];\r\n    //   var pointString = \"\";\r\n    for (var i = 0; i < segment_points; i++) {\r\n      // x positive, y positive\r\n      // first compute the degree\r\n      var degree =\r\n        (Math.PI / 2 / segment_points) * i +\r\n        randomFromInterval(\r\n          -Math.PI / 1.1 / segment_points,\r\n          Math.PI / 1.1 / segment_points\r\n        );\r\n      var y = Math.sin(degree) * b;\r\n      var x =\r\n        Math.sqrt(((1 - (y * y) / (b * b)) / (1 + k * y)) * a * a) +\r\n        randomFromInterval(-a / 200.0, a / 200.0);\r\n      // pointString += x + \",\" + y + \" \";\r\n      result.push([x, y]);\r\n    }\r\n    for (var i = segment_points; i > 0; i--) {\r\n      // x is negative, y is positive\r\n      var degree =\r\n        (Math.PI / 2 / segment_points) * i +\r\n        randomFromInterval(\r\n          -Math.PI / 1.1 / segment_points,\r\n          Math.PI / 1.1 / segment_points\r\n        );\r\n      var y = Math.sin(degree) * b;\r\n      var x =\r\n        -Math.sqrt(((1 - (y * y) / (b * b)) / (1 + k * y)) * a * a) +\r\n        randomFromInterval(-a / 200.0, a / 200.0);\r\n      // pointString += x + \",\" + y + \" \";\r\n      result.push([x, y]);\r\n    }\r\n    for (var i = 0; i < segment_points; i++) {\r\n      // x is negative, y is negative\r\n      var degree =\r\n        (Math.PI / 2 / segment_points) * i +\r\n        randomFromInterval(\r\n          -Math.PI / 1.1 / segment_points,\r\n          Math.PI / 1.1 / segment_points\r\n        );\r\n      var y = -Math.sin(degree) * b;\r\n      var x =\r\n        -Math.sqrt(((1 - (y * y) / (b * b)) / (1 + k * y)) * a * a) +\r\n        randomFromInterval(-a / 200.0, a / 200.0);\r\n      // pointString += x + \",\" + y + \" \";\r\n      result.push([x, y]);\r\n    }\r\n    for (var i = segment_points; i > 0; i--) {\r\n      // x is positive, y is negative\r\n      var degree =\r\n        (Math.PI / 2 / segment_points) * i +\r\n        randomFromInterval(\r\n          -Math.PI / 1.1 / segment_points,\r\n          Math.PI / 1.1 / segment_points\r\n        );\r\n      var y = -Math.sin(degree) * b;\r\n      var x =\r\n        Math.sqrt(((1 - (y * y) / (b * b)) / (1 + k * y)) * a * a) +\r\n        randomFromInterval(-a / 200.0, a / 200.0);\r\n      // pointString += x + \",\" + y + \" \";\r\n      result.push([x, y]);\r\n    }\r\n    return result;\r\n  }\r\n\r\nexport function generateMouthShape0(faceCountour, faceHeight, faceWidth) {\r\n    // the first one is a a big smile U shape\r\n    var faceCountourCopy = faceCountour.slice(0, faceCountour.length - 2);\r\n    // choose one point on face at bottom side\r\n    var mouthRightY = randomFromInterval(faceHeight / 7, faceHeight / 3.5)\r\n    var mouthLeftY = randomFromInterval(faceHeight / 7, faceHeight / 3.5)\r\n    var mouthRightX = randomFromInterval(faceWidth / 10, faceWidth / 2)\r\n    var mouthLeftX = -mouthRightX + randomFromInterval(-faceWidth / 20, faceWidth / 20)\r\n    var mouthRight = [mouthRightX, mouthRightY]\r\n    var mouthLeft = [mouthLeftX, mouthLeftY]\r\n\r\n    var controlPoint0 = [randomFromInterval(0, mouthRightX), randomFromInterval(mouthLeftY + 5, faceHeight / 1.5)]\r\n    var controlPoint1 = [randomFromInterval(mouthLeftX, 0), randomFromInterval(mouthLeftY + 5, faceHeight / 1.5)]\r\n\r\n    var mouthPoints = []\r\n    for (var i = 0; i < 1; i += 0.01) {\r\n        mouthPoints.push(cubicBezier(mouthLeft, controlPoint1, controlPoint0, mouthRight, i))\r\n    }\r\n    if (Math.random() > 0.5) {\r\n        for (var i = 0; i < 1; i += 0.01) {\r\n            mouthPoints.push(cubicBezier(mouthRight, controlPoint0, controlPoint1, mouthLeft, i))\r\n        }\r\n    }else{\r\n        var y_offset_portion = randomFromInterval(0, 0.8);\r\n        for (var i = 0; i < 100; i += 1) {\r\n            mouthPoints.push([mouthPoints[99][0] * (1 - i / 100.0) + mouthPoints[0][0] * i / 100.0, (mouthPoints[99][1] * (1 - i / 100.0) + mouthPoints[0][1] * i / 100.0) * (1 - y_offset_portion) + mouthPoints[99 - i][1] * y_offset_portion])\r\n        }\r\n    }\r\n    return mouthPoints;\r\n}\r\n\r\nexport function generateMouthShape1(faceCountour, faceHeight, faceWidth) {\r\n    // the first one is a a big smile U shape\r\n    var faceCountourCopy = faceCountour.slice(0, faceCountour.length - 2);\r\n    // choose one point on face at bottom side\r\n    var mouthRightY = randomFromInterval(faceHeight / 7, faceHeight / 4)\r\n    var mouthLeftY = randomFromInterval(faceHeight / 7, faceHeight / 4)\r\n    var mouthRightX = randomFromInterval(faceWidth / 10, faceWidth / 2)\r\n    var mouthLeftX = -mouthRightX + randomFromInterval(-faceWidth / 20, faceWidth / 20)\r\n    var mouthRight = [mouthRightX, mouthRightY]\r\n    var mouthLeft = [mouthLeftX, mouthLeftY]\r\n\r\n    var controlPoint0 = [randomFromInterval(0, mouthRightX), randomFromInterval(mouthLeftY + 5, faceHeight / 1.5)]\r\n    var controlPoint1 = [randomFromInterval(mouthLeftX, 0), randomFromInterval(mouthLeftY + 5, faceHeight / 1.5)]\r\n\r\n    var mouthPoints = []\r\n    for (var i = 0; i < 1; i += 0.01) {\r\n        mouthPoints.push(cubicBezier(mouthLeft, controlPoint1, controlPoint0, mouthRight, i))\r\n    }\r\n\r\n    var center = [(mouthRight[0] + mouthLeft[0]) / 2, mouthPoints[25][1] / 2 + mouthPoints[75][1] / 2];\r\n    if (Math.random() > 0.5) {\r\n        for (var i = 0; i < 1; i += 0.01) {\r\n            mouthPoints.push(cubicBezier(mouthRight, controlPoint0, controlPoint1, mouthLeft, i))\r\n        }\r\n    }else{\r\n        var y_offset_portion = randomFromInterval(0, 0.8);\r\n        for (var i = 0; i < 100; i += 1) {\r\n            mouthPoints.push([mouthPoints[99][0] * (1 - i / 100.0) + mouthPoints[0][0] * i / 100.0, (mouthPoints[99][1] * (1 - i / 100.0) + mouthPoints[0][1] * i / 100.0) * (1 - y_offset_portion) + mouthPoints[99 - i][1] * y_offset_portion])\r\n        }\r\n    }\r\n    // translate to center\r\n    for (var i = 0; i < mouthPoints.length; i++) {\r\n        mouthPoints[i][0] -= center[0]\r\n        mouthPoints[i][1] -= center[1]\r\n        // rotate 180 degree\r\n        mouthPoints[i][1] = -mouthPoints[i][1]\r\n        // scale smaller\r\n        mouthPoints[i][0] = mouthPoints[i][0] * 0.6\r\n        mouthPoints[i][1] = mouthPoints[i][1] * 0.6\r\n        // translate back\r\n        mouthPoints[i][0] += center[0]\r\n        mouthPoints[i][1] += center[1] * 0.8\r\n    }\r\n    return mouthPoints;\r\n}\r\n\r\nexport function generateMouthShape2(faceCountour, faceHeight, faceWidth) {\r\n    // generate a random center\r\n    var center = [randomFromInterval(-faceWidth / 8, faceWidth / 8), randomFromInterval(faceHeight / 4, faceHeight / 2.5)]\r\n\r\n    var mouthPoints = getEggShapePoints(randomFromInterval(faceWidth / 4, faceWidth / 10), randomFromInterval(faceHeight / 10, faceHeight / 20), 0.001, 50);\r\n    var randomRotationDegree = randomFromInterval(-Math.PI / 9.5, Math.PI / 9.5)\r\n    for (var i = 0; i < mouthPoints.length; i++) {\r\n        // rotate the point\r\n        var x = mouthPoints[i][0]\r\n        var y = mouthPoints[i][1]\r\n        mouthPoints[i][0] = x * Math.cos(randomRotationDegree) - y * Math.sin(randomRotationDegree)\r\n        mouthPoints[i][1] = x * Math.sin(randomRotationDegree) + y * Math.cos(randomRotationDegree)\r\n        mouthPoints[i][0] += center[0]\r\n        mouthPoints[i][1] += center[1]\r\n    }\r\n    return mouthPoints;\r\n}","import { render } from \"./FaceGenerator.vue?vue&type=template&id=79cd3a02&scoped=true\"\nimport script from \"./FaceGenerator.vue?vue&type=script&lang=js\"\nexport * from \"./FaceGenerator.vue?vue&type=script&lang=js\"\n\nimport \"./FaceGenerator.vue?vue&type=style&index=0&id=79cd3a02&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-79cd3a02\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=c3e8ebc6\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=c3e8ebc6&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\n\r\ncreateApp(App).mount('#app')\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkugly_face\"] = self[\"webpackChunkugly_face\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(905); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["class","viewBox","xmlns","width","height","id","baseFrequency","numOctaves","type","result","in","in2","scale","x1","y1","x2","y2","points","eyeLeftCountour","eyeRightCountour","offset","style","dyeColorOffset","x","y","fill","computedFacePoints","stroke","faceScale","filter","transform","eyeRightUpper","haventSleptForDays","eyeRightLower","i","key","r","Math","random","cx","rightPupilShiftX","cy","rightPupilShiftY","eyeLeftUpper","eyeLeftLower","leftPupilShiftX","leftPupilShiftY","hairs","hair","index","hairColor","rightNoseCenterX","rightNoseCenterY","leftNoseCenterX","leftNoseCenterY","d","mouthPoints","generateFace","downloadSVGAsPNG","randomFromInterval","min","max","getEggShapePoints","a","b","k","segment_points","degree","PI","sin","sqrt","push","findIntersectionPoints","radian","m","tan","abs","generateRectangularFaceContourPoints","intersection","generateFaceCountourPoints","numPoints","faceSizeX0","faceSizeY0","faceSizeY1","faceSizeX1","faceK0","faceK1","face0TranslateX","face0TranslateY","face1TranslateY","face1TranslateX","eggOrRect0","eggOrRect1","results0","results1","length","results","center","face","cubicBezier","P0","P1","P2","P3","t","generateEyeParameters","height_upper","height_lower","P0_upper_randX","P3_upper_randX","P0_upper_randY","P3_upper_randY","offset_upper_left_randY","offset_upper_right_randY","P0_upper","P3_upper","eye_true_width","offset_upper_left_x","offset_upper_right_x","offset_upper_left_y","offset_upper_right_y","offset_lower_left_x","offset_lower_right_x","offset_lower_left_y","offset_lower_right_y","left_converge0","right_converge0","left_converge1","right_converge1","generateEyePoints","rands","P0_lower","P3_lower","P1_upper","P2_upper","P1_lower","P2_lower","upper_eyelid_points","upper_eyelid_points_left_control","upper_eyelid_points_right_control","upper_eyelid_left_control_point","upper_eyelid_right_control_point","weight","lower_eyelid_points","lower_eyelid_points_left_control","lower_eyelid_points_right_control","lower_eyelid_left_control_point","lower_eyelid_right_control_point","eyeCenter","upper","lower","generateBothEyes","rands_left","rands_right","left_eye","right_eye","left","right","factorial","n","binomialCoefficient","calculateBezierPoint","controlPoints","binCoeff","pow","computeBezierCurve","numberOfPoints","curve","point","generateHairLines0","faceCountour","numHairLines","faceCountourCopy","slice","numHairPoints","floor","hair_line","index_offset","j","d0","d1","generateHairLines1","index_start","generateHairLines2","pickedIndices","sort","reverse","powerscale","portion","lastHairPoint","lastPointsDistance","concat","generateHairLines3","splitPoint","generateMouthShape0","faceHeight","faceWidth","mouthRightY","mouthLeftY","mouthRightX","mouthLeftX","mouthRight","mouthLeft","controlPoint0","controlPoint1","y_offset_portion","generateMouthShape1","generateMouthShape2","randomRotationDegree","cos","name","data","distanceBetweenEyes","leftEyeOffsetX","leftEyeOffsetY","rightEyeOffsetX","rightEyeOffsetY","eyeHeightOffset","leftEyeCenter","rightEyeCenter","hairColors","backgroundColors","methods","this","faceResults","eyes","leftInd0","rightInd0","leftInd1","rightInd1","leftLerp","rightLerp","numHairMethods","choice","svg","document","getElementById","svgData","XMLSerializer","serializeToString","canvas","createElement","ctx","getContext","img","svgSize","getBoundingClientRect","setAttribute","btoa","onload","drawImage","e","MouseEvent","download","href","toDataURL","dispatchEvent","mounted","window","addEventListener","__exports__","components","FaceGenerator","render","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","splice","definition","o","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}